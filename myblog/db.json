{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-2.png","path":"img/image-2.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-3.png","path":"img/image-3.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-4.png","path":"img/image-4.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/img-4.png","path":"img/img-4.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/img.png","path":"img/img.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"f856d43418c22a2e0acda0dc8dfc338c5f591fb4","modified":1745411853324},{"_id":"source/_posts/iptables防止ddos-cc.md","hash":"7b84e1bac42476c8403b86438655f420d5340e79","modified":1745411853327},{"_id":"source/_posts/elfk.md","hash":"23ce335111b14750cd562b15fe701ffdb78e6feb","modified":1745411853325},{"_id":"source/_posts/miniconda3.md","hash":"f6bab37af7cad655e77e6b098841efd20c4951f2","modified":1745411853343},{"_id":"source/_posts/screen.md","hash":"e2baf5041a5b30f6b8e8ec7b471ca28d2d5dc645","modified":1745724092606},{"_id":"source/_posts/about.md","hash":"7b22f33062e86a8dab5a48f9d611b3e5815721c3","modified":1745411853324},{"_id":"source/_posts/openvpn.md","hash":"a2d6e9308d75e27add859822e1c1c9f168a575d1","modified":1745411853344},{"_id":"source/_posts/prometheus.md","hash":"e8cda8a9e903fedff83cd20234953f903ebd86ee","modified":1745411853363},{"_id":"source/about/index.md","hash":"d40254ef02007bce2fd127b072414ae80e0bd0c2","modified":1745411853505},{"_id":"source/_posts/使用kubekey快速安装k8s.md","hash":"b4014ed65fc3e17df272f03572308ac9ce03e10d","modified":1745723856486},{"_id":"source/categories/index.md","hash":"99ca7b710d585ec269386c6fde64c1949ca40818","modified":1745411853505},{"_id":"source/tags/index.md","hash":"2b2f4683020428f3669fba0caacc383d9bbc91fe","modified":1745411853505},{"_id":"source/_posts/prometheus/image-6.png","hash":"d8e9764519615d8bcbf5a2d96877f799649e5f9b","modified":1745411853453},{"_id":"source/_posts/prometheus/image-19.png","hash":"67edf337abdf7bd80fb9c453dc00dc2f06c83cf3","modified":1745411853409},{"_id":"source/_posts/screen/image.png","hash":"40e05211c71099fddaaa68dacb4754ad3fdb2f28","modified":1745724246450},{"_id":"source/_posts/prometheus/image-24.png","hash":"2704542f9fedfc2f7bbb306459e44a1434b2795a","modified":1745411853434},{"_id":"source/_posts/prometheus/image-14.png","hash":"941b76bbc04ba0df5e3f977fded9e1c874f17a79","modified":1745411853389},{"_id":"source/_posts/prometheus/image-9.png","hash":"cab348483b2aca8fb4865c27d51372aaf094080a","modified":1745411853467},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"0f469650107841dc1dc716aa94b3ca2bb0721762","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"bebefb49322b1d6abb06a024b5fd5d01d6f37870","modified":1745411852671},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"e1b9096ae0c4e5ef0a911aec05dbad4a3aae3173","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"92e45255b8725f0a00450c88fcfd51ec61e1db67","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1745411852677},{"_id":"node_modules/hexo-theme-butterfly/languages/ja.yml","hash":"a281d3cc3e117e90597b783dc5569dba3976d2eb","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1745411852677},{"_id":"node_modules/hexo-theme-butterfly/languages/ko.yml","hash":"c7d861c58f204f47a5b4d6e118e1f1e8fb8a852f","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"e0bf36edf18cf3380b900be7528b536252990c26","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-HK.yml","hash":"bac3063ad2892be232f7d91361c28585a3cc7eb5","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"a2704f0406484fdae3410e9992cf996f9859356e","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"bd7ee35aa30964493d2729ef105bb86331b096c3","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"7ce2a49c6c41847de4ccea377ade116339984434","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"65c4a49c65c3fc4d9dc88b9791a75710c698c3a1","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/scripts/common/postDesc.js","hash":"272613a71d16f0de6dac883be4839259f774be76","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/merge_config.js","hash":"10ffed853a935498f1f5da2c5b57200c957874a7","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"b23108d29fff3e32384d8689c8bcd2ab306a1ae7","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"20a6ebf63439501a4b3fc81e7a2a2ea5d103bace","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"3eb0bbb1288dc7b0ff82cc46ceb53bd666893416","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"00c5742ad1c75b3c5684d02ffc6a1921399e5376","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"a07b586b510aa2df953102d998e84207acc34f9b","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"fa3d0a64f7fce4aff7928d4ddd95548978ba001c","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"f02fb085a88a2c0c82aeffacc24e1b71c74bd7c0","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"89c6c78d2db43b190055d5690741a79bab4f3e7e","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"50d8d8fac5c5b6e26317028895d7d82a2cf46606","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"f589fb6646bd17cf12d77a9b251dd614e1c8b899","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/series.js","hash":"40bc9a065e3a1423e0e66f4911e00713ca9f5e9e","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"176804f07567aa80f1ed95897a968a996b155dec","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1745411852670},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"f9b02aac0dbbb2b71c037dd215e70c8b7ec7741c","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"6bd41add3a45e55d5e51eab5285a2d1a909d37f3","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"1d11e334b22dbbedcb0f751f9ee9789d4416605e","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"e5e6c05a621483b3542f2884e8ba45e84b1e973a","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"bd45e6fa935ace9cb54499b0491dacfb78ccc354","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"43f951b639038f3bc01deea03368d8dcf492cbb0","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"3e65b7bf6bccccbba7e15349f0a44f15c64c5b5e","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"d1eec577074ab7b262182885576135bf1896e12c","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"48637ad8e405306772b93837f33400bde1055819","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"5a52047b8520f79864d5a4ee2379a29751aead23","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1745411852686},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1745411852687},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1745411852686},{"_id":"node_modules/hexo-theme-butterfly/source/img/img.png","hash":"185ddc251df0cd80abd4f212b3213963f6561161","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"e93a36d3c29b5a02c7f26a23f96e1f84b063cbe8","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"e792a435afee1f9491095084a00dc77e3522c1fd","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"56a3c32de1a15627ff38c67f1131cdd6ec5ac924","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"9ea75b06f19bf356f340f4a3fc1bdc0713cfe445","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"1e1a69aa2cbda2e621c741b3802093244b3cc04e","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/structured_data.pug","hash":"1b83ae33961528f128596753fd05067c672d6bff","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"44331c9db74b281b5c5c41439d3407a9076df1a1","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"18b984ce184ea53d2dff5a03cc2d0d39d2ec3406","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"a2f7d69ca7ec58f24fe7d4e04ae21d5b62b01567","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1745411852678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/indexPostUI.pug","hash":"f3389fa9ae4fa32e3c16573286583bc3023e57ad","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"6b0fa5f048aca8e9cbe56978301af918cf7ac34a","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"b96c232e5178d927987791d9ae386dd83679535a","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"efe4f8019632b51c92c4f7628758538305e06e47","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"236c3ce26dd76e80b04d457789475c42da5ac0c8","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/umami_analytics.pug","hash":"bc35a1552d26ecdeeadbf06300078dbb5128a6e5","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"1aba8aa7cd767dc96879d13a13b4c8ceb9023233","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"1dd19a564320d248dbcee7f118a5b96c6466da65","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"45f620cd87b9ef2aa9d1e024e697ed6b4eecff34","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"d12340a7df4601b9a23f070e16645861aeb3bb0a","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"4fcb8222b9548e22f7b76f12d33e3698240cbae0","modified":1745411852682},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"4c9849df9c68d892c7df0ca28123aeb0dc9dc424","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"ba174889e770ae9f6683379b9eae9d8c94253080","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"fcddd80cdeb6aa81f342cd9f0102302f6ba087a8","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"d7b988d8588207086670f39aa49fce442c429f7a","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"094108f2a4e351a2fa496d6bd3e2388151416b3f","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"7d7554573c005399bc8c2264a85896d2d51be1e1","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"543eaf9c7df7e0db841e5946ee5f9082c3c46290","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"992d192db7d1c96e995b85ed11c20c571d33fbad","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"3a88eedcb694da79e92581ce50cb1a430b1fb615","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"6c4cbdadd9a49029fe0c59e29808d873e5b6b6ee","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1745411852684},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"7119f2f2943de71999d3dd6ba5c60cde846f114b","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1745411852697},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"febff991595504d8e850ced0b9cc090f02ed97f0","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f0a90d8e39915a74b16ef22e851f179415cd7eaa","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"b5db4203a1392385838c73549ddeae0a4be67eba","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f2ea5249b3e6670f6c8c77868f4f42c502e43830","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"89c63a5f0c0ab6314de7158fbc8fcbc84997fc55","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"c81fa7d8a5cb96d1ae07bfa8c46b84a58161add1","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"8af585e6d6f73ee57114eefad574dc6e8ea9f570","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"592b2251db6c1abeb8b0eebe3b2e6d9aa0dec445","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"58914c58a190e3bc0aa37cb581e77e442b563501","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"7a80231fc71822e503879383a2d9611edf1d72dd","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"84f7cfde00f929fa3dc40349bcab060ec68f1b9f","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"53d99831f29aeb2e336ed1407d79590041f77002","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"24f18b0c67803210d53abbf9c1d454c000b06eee","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"30a7d157890de69deab28baa47fb7bb28b040efd","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"e2bf15357485cd502414b3b20f5b1f762a2fd014","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"187302dbc916852ff2fdf47061e272c061611dda","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"27fa75affebc6e84a487c62bceff783bde595256","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"fa4b4194749d05f7249f365f2b89c0281057ce54","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"72e2970b23570e308f8af5d8ba8e5e3321d01bbf","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"a7c07dbc1e970a5b247091458e1ee9b144a3366d","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"34edfebf0cace0852806be774910ccb0e0914650","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"d2e12a9fc302a4efe52c90d44896fbd73e193a1f","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"24d094fd917947c0ca7492fa094328b1a183b873","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"62466b251052cae609b6369d4cb4b6a85320757d","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"5b29badecbbe828112c001156023fc0566045cf6","modified":1745411852679},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/chartjs.pug","hash":"732eb1118ea1a73aa5c164d639097c614f8e9953","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d376ec17fb19fcdcf0d2ad71330190146d3af879","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ec6c685080634ac46ffbea1b8f10313388888f43","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"af66d13204030d47537b9e31a6173e63589ce7ff","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"7f0ede1cd3fed2669c94a8e1b21bc0b183f310b8","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"f5ee1c9c8ffa4bca972d30f4de69268b8d47f052","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1745411852681},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1745411852683},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1745411852683},{"_id":"source/_posts/openvpn/image.png","hash":"de8f4ffa54004c36d88a54e32bf376e09fbe543d","modified":1745411853363},{"_id":"source/_posts/prometheus/image-11.png","hash":"305a988f655f2888e5b92fc8a2d7d03661fc7a68","modified":1745411853376},{"_id":"source/_posts/prometheus/image-17.png","hash":"4528330575961efd85d1364399af02b57b685c58","modified":1745411853404},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-2.png","hash":"3f1b29a9b21b73527afab229d327f0e52a7bfab3","modified":1745411852687},{"_id":"source/_posts/prometheus/image-10.png","hash":"5c3f654b55c451246b24cf0f9a813559fce5ba6f","modified":1745411853373},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"db2f4fff80a1166476ea76ae004aa186df11bad3","modified":1745411852680},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"b83db9fa64d42a0bfd97efb660e09be3f166a144","modified":1745411852680},{"_id":"source/_posts/iptables防止ddos-cc/image-2.png","hash":"979c71cf1f05cb7ad79ef16fe8295587fdbf3f85","modified":1745411853336},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-3.png","hash":"ccc5b72563b9731ac6f77bd61c94cd9ef033c9f8","modified":1745411852687},{"_id":"source/_posts/openvpn/image-2.png","hash":"41657d6c3de1e0c3c7e2b830a2b67d38464b76bf","modified":1745411853353},{"_id":"source/_posts/prometheus/image-16.png","hash":"d323cdda830c0b08502144608405b614b0f05057","modified":1745411853401},{"_id":"source/_posts/prometheus/image-22.png","hash":"916e40a625e46733c94949ba9d03c38e12b97d3e","modified":1745411853427},{"_id":"source/_posts/prometheus/image-13.png","hash":"c1a565035062ef229f3c25143ec3d19e63a42547","modified":1745411853387},{"_id":"source/_posts/prometheus/image-18.png","hash":"569c140190b5e14042742d39499e0c6e8325c760","modified":1745411853408},{"_id":"source/_posts/prometheus/image-20.png","hash":"10020604c51337024ddf6059eb2246ad08a636cb","modified":1745411853419},{"_id":"source/_posts/prometheus/image.png","hash":"f8eea7cdc5be381d0a077c440e93976b98d68234","modified":1745411853472},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1745411852686},{"_id":"source/_posts/iptables防止ddos-cc/image.png","hash":"cd9360694e9b8593d5859daae8411bf3a0d9241f","modified":1745411853342},{"_id":"source/_posts/prometheus/image-1.png","hash":"d0efacc51df380c64b7093b60292391763fc9518","modified":1745411853369},{"_id":"source/_posts/prometheus/image-21.png","hash":"b83bd7ceae3bd6f5f782689eda9eb2b67397554b","modified":1745411853424},{"_id":"source/_posts/prometheus/image-12.png","hash":"c29d63d28c0e12a61cb6543392c1743e6b3e10a0","modified":1745411853382},{"_id":"source/_posts/openvpn/image-1.png","hash":"d7d58c339c2c1b467afe1b0b3fdf42a9f1e88b29","modified":1745411853348},{"_id":"source/_posts/prometheus/image-23.png","hash":"abcca34126a92233ebc44a1240a177fdf30e61b4","modified":1745411853432},{"_id":"source/_posts/prometheus/image-4.png","hash":"0c8126a6edf36927294024a8c777630756ad424f","modified":1745411853446},{"_id":"source/_posts/prometheus/image-7.png","hash":"543c3694932046264d0f499c41612eb38f560796","modified":1745411853459},{"_id":"source/_posts/prometheus/image-8.png","hash":"a0c677cb3c1a823b9bf8c2cd321541d92cd170f8","modified":1745411853465},{"_id":"source/_posts/openvpn/image-3.png","hash":"6a1c126be932c31ae58921006dc3b7b5135bd883","modified":1745411853359},{"_id":"source/_posts/使用kubekey快速安装k8s/image.png","hash":"19fb427077c2b8e532d98df8086b67c48b88d23f","modified":1745723959245},{"_id":"source/_posts/prometheus/image-2.png","hash":"81d6dd4e194e9741d2cbd0da19824bfa75ed6b94","modified":1745411853415},{"_id":"source/_posts/prometheus/image-5.png","hash":"d3e0cbd5bbf80d54ae281ab94ad32414001f8cf2","modified":1745411853453},{"_id":"source/_posts/iptables防止ddos-cc/image-1.png","hash":"77cb4b5ee2d44f18ff4c79207e61918bcd1c7606","modified":1745411853332},{"_id":"source/_posts/prometheus/image-3.png","hash":"56f3a0de7c38cdaace4b506df44f01316e1deb06","modified":1745411853440},{"_id":"source/_posts/prometheus/image-15.png","hash":"3e32a57c4be073c3f9de706f7c34ad5baf1dffec","modified":1745411853397},{"_id":"node_modules/hexo-theme-butterfly/source/img/image-4.png","hash":"61753cd127b3a1cc66d49019e27b4c749987b74c","modified":1745411852689},{"_id":"node_modules/hexo-theme-butterfly/source/img/img-4.png","hash":"ed2e6a5936b308caf72c51452a2bbf70e57b8f8a","modified":1745411852697},{"_id":"public/search.json","hash":"74847f8dfc97461e1ec3dfe849b932d42381d975","modified":1745724273282},{"_id":"public/404.html","hash":"0f7f26ae9fe0461ed03f08e854a04902e164cf58","modified":1745724273282},{"_id":"public/404/index.html","hash":"500147d6566850181573755f30bdd239972ee696","modified":1745724273282},{"_id":"public/categories/index.html","hash":"3ee773058e8a26e26fdaef6d0b09c0c5c14d9c1e","modified":1745724273282},{"_id":"public/about/index.html","hash":"113b52ec48387065e923ed032d6a2e72513aa9d3","modified":1745724273282},{"_id":"public/tags/index.html","hash":"24fb4f523bb6d0dbc7f625ae5b1c0cd723e2860c","modified":1745724273282},{"_id":"public/2025/04/14/about/index.html","hash":"0473d1ad27eccd91f5f7f1ea7248ea5f8e116507","modified":1745724273282},{"_id":"public/2025/04/18/elfk/index.html","hash":"49e506b6c1929fb036b3dd1c9b9942c47971507f","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/index.html","hash":"575dde6702d7fe371f50b1c12464928d61aab66e","modified":1745724273282},{"_id":"public/2025/04/21/miniconda3/index.html","hash":"3ec6de580201dc539ff40c073c389090653dd613","modified":1745724273282},{"_id":"public/2025/04/21/iptables防止ddos-cc/index.html","hash":"0d61ea0e74d9e3a28af3176a181c1d093c136fd1","modified":1745724273282},{"_id":"public/2025/04/21/openvpn/index.html","hash":"89ff4e944f6fe48c1e8536fdef8c9d890946d990","modified":1745724273282},{"_id":"public/2025/04/27/使用kubekey快速安装k8s/index.html","hash":"d8f4c3dcf0dffde5ca93037c66571af26bd38fdd","modified":1745724273282},{"_id":"public/2025/04/27/screen/index.html","hash":"d0841fd231a8131ffc8cbd8158f002146949db6e","modified":1745724273282},{"_id":"public/archives/index.html","hash":"3df7c4119a41e69184dd4c1e1762da4bd49bd898","modified":1745724273282},{"_id":"public/archives/2025/index.html","hash":"4083460c8dc302bffb6931144b41608b8dd8cb5f","modified":1745724273282},{"_id":"public/archives/2025/04/index.html","hash":"24b49bbb72cd60ee5a28cae29e3d1b0db3211d3d","modified":1745724273282},{"_id":"public/categories/test/index.html","hash":"eecf479f12322c0a6924315bda1168dd1af8af71","modified":1745724273282},{"_id":"public/categories/中间件/index.html","hash":"76de53cc0c52ce4458fa40036d8be21a0501eb50","modified":1745724273282},{"_id":"public/categories/linux/index.html","hash":"a939847d141081021fb54081cc58cd0b2e60dadc","modified":1745724273282},{"_id":"public/categories/python/index.html","hash":"be5ab60c5f78b4a24cef36092cc12ed849377dd5","modified":1745724273282},{"_id":"public/categories/prometheus/index.html","hash":"1e43395a03dd78bf18e27ef4bccf4b2a40c608c7","modified":1745724273282},{"_id":"public/categories/k8s/index.html","hash":"ed62721030703f56c7f7680137dd5863d9776074","modified":1745724273282},{"_id":"public/index.html","hash":"18d1986d201db1d50b3405058e1460c0f155784f","modified":1745724273282},{"_id":"public/tags/about/index.html","hash":"70dd43537cae98a958ce2261e5c3a423f49fcbbd","modified":1745724273282},{"_id":"public/tags/prometheus/index.html","hash":"d06c97efe2b9bbd930a7fdbb49af3e1df57133e0","modified":1745724273282},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1745724273282},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1745724273282},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1745724273282},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1745724273282},{"_id":"public/img/img.png","hash":"185ddc251df0cd80abd4f212b3213963f6561161","modified":1745724273282},{"_id":"public/img/image-2.png","hash":"3f1b29a9b21b73527afab229d327f0e52a7bfab3","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-6.png","hash":"d8e9764519615d8bcbf5a2d96877f799649e5f9b","modified":1745724273282},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1745724273282},{"_id":"public/js/utils.js","hash":"fd3c26366c78dd82bc87d4ddebe76c582122e1b7","modified":1745724273282},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1745724273282},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1745724273282},{"_id":"public/css/index.css","hash":"7d4c802f0efe0158be855e4751d5dc38bee6a56b","modified":1745724273282},{"_id":"public/js/main.js","hash":"fb746a3e67d0373deea8481110dd436fea4ca38c","modified":1745724273282},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1745724273282},{"_id":"public/img/image-3.png","hash":"ccc5b72563b9731ac6f77bd61c94cd9ef033c9f8","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-19.png","hash":"67edf337abdf7bd80fb9c453dc00dc2f06c83cf3","modified":1745724273282},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-24.png","hash":"2704542f9fedfc2f7bbb306459e44a1434b2795a","modified":1745724273282},{"_id":"public/2025/04/27/screen/image.png","hash":"40e05211c71099fddaaa68dacb4754ad3fdb2f28","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-14.png","hash":"941b76bbc04ba0df5e3f977fded9e1c874f17a79","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-9.png","hash":"cab348483b2aca8fb4865c27d51372aaf094080a","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-11.png","hash":"305a988f655f2888e5b92fc8a2d7d03661fc7a68","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-17.png","hash":"4528330575961efd85d1364399af02b57b685c58","modified":1745724273282},{"_id":"public/2025/04/21/openvpn/image.png","hash":"de8f4ffa54004c36d88a54e32bf376e09fbe543d","modified":1745724273282},{"_id":"public/2025/04/21/iptables防止ddos-cc/image-2.png","hash":"979c71cf1f05cb7ad79ef16fe8295587fdbf3f85","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-10.png","hash":"5c3f654b55c451246b24cf0f9a813559fce5ba6f","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-13.png","hash":"c1a565035062ef229f3c25143ec3d19e63a42547","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-16.png","hash":"d323cdda830c0b08502144608405b614b0f05057","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-20.png","hash":"10020604c51337024ddf6059eb2246ad08a636cb","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-22.png","hash":"916e40a625e46733c94949ba9d03c38e12b97d3e","modified":1745724273282},{"_id":"public/2025/04/21/openvpn/image-2.png","hash":"41657d6c3de1e0c3c7e2b830a2b67d38464b76bf","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-18.png","hash":"569c140190b5e14042742d39499e0c6e8325c760","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image.png","hash":"f8eea7cdc5be381d0a077c440e93976b98d68234","modified":1745724273282},{"_id":"public/2025/04/21/iptables防止ddos-cc/image.png","hash":"cd9360694e9b8593d5859daae8411bf3a0d9241f","modified":1745724273282},{"_id":"public/img/image-4.png","hash":"61753cd127b3a1cc66d49019e27b4c749987b74c","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-1.png","hash":"d0efacc51df380c64b7093b60292391763fc9518","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-21.png","hash":"b83bd7ceae3bd6f5f782689eda9eb2b67397554b","modified":1745724273282},{"_id":"public/2025/04/21/openvpn/image-1.png","hash":"d7d58c339c2c1b467afe1b0b3fdf42a9f1e88b29","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-12.png","hash":"c29d63d28c0e12a61cb6543392c1743e6b3e10a0","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-23.png","hash":"abcca34126a92233ebc44a1240a177fdf30e61b4","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-4.png","hash":"0c8126a6edf36927294024a8c777630756ad424f","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-7.png","hash":"543c3694932046264d0f499c41612eb38f560796","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-8.png","hash":"a0c677cb3c1a823b9bf8c2cd321541d92cd170f8","modified":1745724273282},{"_id":"public/2025/04/21/openvpn/image-3.png","hash":"6a1c126be932c31ae58921006dc3b7b5135bd883","modified":1745724273282},{"_id":"public/2025/04/27/使用kubekey快速安装k8s/image.png","hash":"19fb427077c2b8e532d98df8086b67c48b88d23f","modified":1745724273282},{"_id":"public/img/img-4.png","hash":"ed2e6a5936b308caf72c51452a2bbf70e57b8f8a","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-2.png","hash":"81d6dd4e194e9741d2cbd0da19824bfa75ed6b94","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-5.png","hash":"d3e0cbd5bbf80d54ae281ab94ad32414001f8cf2","modified":1745724273282},{"_id":"public/2025/04/21/iptables防止ddos-cc/image-1.png","hash":"77cb4b5ee2d44f18ff4c79207e61918bcd1c7606","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-3.png","hash":"56f3a0de7c38cdaace4b506df44f01316e1deb06","modified":1745724273282},{"_id":"public/2025/04/18/prometheus/image-15.png","hash":"3e32a57c4be073c3f9de706f7c34ad5baf1dffec","modified":1745724273282}],"Category":[{"name":"test","_id":"cm9z35qw90004qmm4esrj0aru"},{"name":"中间件","_id":"cm9z35qwh000bqmm42y404lio"},{"name":"linux","_id":"cm9z35qwk000gqmm4b1vwgbxd"},{"name":"python","_id":"cm9z35qwm000kqmm4f4gf98ur"},{"name":"prometheus","_id":"cm9z35qwp000oqmm46ihcevis"},{"name":"k8s","_id":"cm9z35qwq000sqmm41do66x2h"}],"Data":[],"Page":[{"title":"404","date":"2018-09-30T09:25:30.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2025-04-23T12:37:33.324Z","path":"404/index.html","comments":1,"_id":"cm9z35qvx0000qmm4aajy64eb","content":"","excerpt":"","more":""},{"title":"关于我","type":"about","date":"2025-04-14T07:39:26.000Z","_content":"**人生天地之间，若白驹之过隙，忽然而已。人终将会死去总想留下点什么痕迹，希望我的博客永存**<br>\n**地球很小 小如尘埃** [点击跳转](https://www.bilibili.com/video/BV1Wx41147qg/)\n","source":"about/index.md","raw":"---\ntitle: 关于我\ntype: 'about'\ndate: 2025-04-14 15:39:26\n---\n**人生天地之间，若白驹之过隙，忽然而已。人终将会死去总想留下点什么痕迹，希望我的博客永存**<br>\n**地球很小 小如尘埃** [点击跳转](https://www.bilibili.com/video/BV1Wx41147qg/)\n","updated":"2025-04-23T12:37:33.505Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm9z35qw50002qmm420sm7ll2","content":"<p><strong>人生天地之间，若白驹之过隙，忽然而已。人终将会死去总想留下点什么痕迹，希望我的博客永存</strong><br><br><strong>地球很小 小如尘埃</strong> <a href=\"https://www.bilibili.com/video/BV1Wx41147qg/\">点击跳转</a></p>\n","excerpt":"","more":"<p><strong>人生天地之间，若白驹之过隙，忽然而已。人终将会死去总想留下点什么痕迹，希望我的博客永存</strong><br><br><strong>地球很小 小如尘埃</strong> <a href=\"https://www.bilibili.com/video/BV1Wx41147qg/\">点击跳转</a></p>\n"},{"title":"分类","date":"2025-04-14T06:03:07.000Z","type":"categories","limit":{"value":2},"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-04-14 14:03:07\ntype: \"categories\"\nlimit:\n  value: 2\n---\n","updated":"2025-04-23T12:37:33.505Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm9z35qwc0006qmm40nk24v0k","content":"","excerpt":"","more":""},{"title":"tags","type":"tags","date":"2025-04-14T07:39:26.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: 'tags'\ndate: 2025-04-14 15:39:26\n---\n","updated":"2025-04-23T12:37:33.505Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm9z35qwe0008qmm48ddk20lo","content":"","excerpt":"","more":""}],"Post":[{"layout":"about","title":"about","date":"2025-04-14T08:31:01.000Z","_content":"分类\n","source":"_posts/about.md","raw":"---\nlayout: about\ntitle: about\ndate: 2025-04-14 16:31:01\ntags: about\ncategories: test\n---\n分类\n","slug":"about","published":1,"updated":"2025-04-23T12:37:33.324Z","comments":1,"photos":[],"_id":"cm9z35qw10001qmm40dk3hwpb","content":"<p>分类</p>\n","excerpt":"","more":"<p>分类</p>\n"},{"title":"elfk部署使用","date":"2025-04-18T01:56:59.000Z","_content":"\n>filebeat不建议容器启动，适合放到每个节点采集日志统一发给logstash；如果全部输出到elasticsearch会导致负载比较高；不建议每个节点用logstash采集因为比较重，filebeat比较轻量级\n\n# 安装elfk\n```shell\ncurl -SL https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n#将可执行权限赋予安装目标路径中的独立二进制文件\nsudo chmod +x /usr/local/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\nyum install -y https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.2-x86_64.rpm\n\ncat >> ./elk.yml << EOF\nversion: '3.8'\nservices:\n  elasticsearch:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/elasticsearch:7.14.0\n    container_name: elasticsearch\n    environment:\n      - discovery.type=single-node  # 单节点模式\n      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制\n      - ELASTIC_PASSWORD=Ytest@123  # 设置 Elasticsearch 密码\n    volumes:\n      - ./elasticsearch/data:/usr/share/elasticsearch/data  # 数据持久化\n#      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml  # 自定义配置（可选）\n    ports:\n      - \"9200:9200\"  # REST API\n      - \"9300:9300\"  # 集群通信\n    networks:\n      - elk\n  logstash:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/logstash:7.14.0\n    container_name: logstash\n    volumes:\n      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # 自定义 Logstash 管道配置\n      - ./logstash/logs:/usr/share/logstash/logs  # 日志持久化\n    environment:\n      - LS_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制\n    ports:\n      - \"5044:5044\"  # Beats 输入端口（如 Filebeat）\n      - \"5000:5000/tcp\"  # TCP 输入\n      - \"5000:5000/udp\"  # UDP 输入\n    depends_on:\n      - elasticsearch\n    networks:\n      - elk\n  kibana:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/kibana:7.14.0\n    container_name: kibana\n    environment:\n      - I18N_LOCALE=zh-CN\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 指向 Elasticsearch 服务\n      - ELASTICSEARCH_USERNAME=elastic  # 默认用户名\n      - ELASTICSEARCH_PASSWORD=Ytest@123  # 与 Elasticsearch 密码一致\n    ports:\n      - \"5601:5601\"  # Kibana Web 界面\n    depends_on:\n      - elasticsearch\n    networks:\n      - elk\nnetworks:\n  elk:\n    driver: bridge\nEOF\nmkdir ./logstash/config -p\ncat >> ./logstash/config/logstash.conf << EOF\n# ./logstash/config/logstash.conf\ninput {\n  tcp {\n    port => 5000  # 监听 TCP 日志\n  }\n  beats {\n    port => 5044  # 接收 Filebeat 输入\n  }\n}\nfilter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }  # 解析 Apache 日志\n  }\n  date {\n    match => [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]  # 时间解析\n  }\n}\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    user => \"elastic\"\n    password => \"Ytest@123\"\n    index => \"logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n  }\n}\nEOF\nchmod 777 elasticsearch/data\n```\n# filebeat\n**根据不同tag写入不同的logstash后续分割和输出建立索引好区分**\n```\nfilebeat.inputs: # filebeat input输入\n- type: log    # 标准输入\n  enabled: true  # 启用标准输入\n  paths:\n    - /var/log/*\n  tags: [\"system\"]\n  #  fields:\n  #    type: \"system_log\"\n- type: filestream\n  paths:\n    - \"/var/log/nginx/*.log\"\n  tags: [\"nginx\"]   # 标记为 nginx 日志\n#output.console:\n# enabled: true               # 启用控制台输出\n  #  pretty: true                # 美化 JSON 格式\n  # codec.json:\n  #   pretty: true\n  # escape_html: false        # 不转义 HTML 符号（保持原始格式）\n \n# 输出到 Logstash - 用于生产数据处理\noutput.logstash:\n  enabled: true               # 启用 Logstash 输出\n  #  when:\n  #    equals:\n  #      fields.type: \"system_log\"\n  hosts: [\"127.0.0.1:5044\"]  # Logstash 的地址和端口（支持多个主机负载均衡）\n  when.contains:\n      tags: \"system\"  # 匹配 tags 包含 \"system\"\n  hosts: [\"127.0.0.1:5045\"]\n  enabled: true\n  when.contains:\n    tags: \"nginx\"  # 匹配 tags 包含 \"nginx\"\n```\n# logstash\n**根据不同type进行过滤和输出索引**\n```\nLogstash Reference [7.10] | Elastic\n\ninput {\n  tcp {\n    port => 5000  # 监听 TCP 日志\n  }\n  beats {\n    port => 5044  # 接收 Filebeat 输入\n    type => \"system\"\n  }\n  beats {\n    port => 5045  # 接收 Filebeat 输入\n    type => \"nginx\"\n  }\n}\n  \n \nfilter {\n  date {\n    match => [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]  # 时间解析\n  }\n \n  if[type] == \"nginx\" {\n    grok {\n      match => { \"message\" => \"%{HTTPD_COMMONLOG}\" }  # 解析 nginx 日志,如果不区分；system类型是解析不了的，会直接报错\n      remove_field => [\"@version\"]\n     }\n  }\n  #对于system类型可以再写个if来单独过滤\n  if[type] == \"system\" {\n    grok {\n      match =>  {\"message\" => \"%{IPV4:ip}\"}  \n      remove_field => [\"@version\"]\n     }\n    mutate {  #这里过滤器乱写的，需要根据自身的业务配置\n        remove_field => [\"timestamp\"]\n        gsub => [\"message\",\"\\s\",\"| \"]\n        split => [\"message\",\"|\"]\n        replace => { \"timenew\" =>  \"%{+yyyy-MM-dd}\" }\n        add_field => {\n         \"year\" => \"%{+yyyy}\"\n         \"month\" => \"%{+MM}\"\n         \"day\" => \"%{+dd}\"\n         \"status\" => \"%{[message][1]}\"\n         \"code\" => \"%{[message][2]}\"\n        }\n    }\n  }\n \n  \n}\n#必须通过type指定不同输出创建不同的index =>,否则index的字段不一样，当第一个index结构确定后，第二个输入无法输出到第一个index，因为字段不一样\noutput {\n  if \"system\" in [tags] {\n    elasticsearch {\n      hosts => [\"elasticsearch:9200\"]\n      user => \"elastic\"\n      password => \"Ytest@123\"\n      index => \"filebeat-system-logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n    }\n  }  \n  if \"nginx\" in [tags] {\n    elasticsearch {\n      hosts => [\"elasticsearch:9200\"]\n      user => \"elastic\"\n      password => \"Ytest@123\"\n      index => \"filebeat-nginx-logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n    }\n  }  \n}\n```\n# elasticsearch\n>常用语法\n>>/_cat <br>\n/_cat/master?help<br>\n/_cat/indices?v  显示title<br>\n/_cat/indices<br>\nlogs-2025.03.24 为索引名称<br>\n/logs-2025.03.24/_search 查看文档<br>\n/logs-2025.03.24/ 查看索引结构<br>\n/logs-2025.03.24/_doc/_search?q=message:test\n","source":"_posts/elfk.md","raw":"---\ntitle: elfk部署使用\ndate: 2025-04-18 09:56:59\ntags:\ncategories: 中间件\n---\n\n>filebeat不建议容器启动，适合放到每个节点采集日志统一发给logstash；如果全部输出到elasticsearch会导致负载比较高；不建议每个节点用logstash采集因为比较重，filebeat比较轻量级\n\n# 安装elfk\n```shell\ncurl -SL https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n#将可执行权限赋予安装目标路径中的独立二进制文件\nsudo chmod +x /usr/local/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\nyum install -y https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.2-x86_64.rpm\n\ncat >> ./elk.yml << EOF\nversion: '3.8'\nservices:\n  elasticsearch:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/elasticsearch:7.14.0\n    container_name: elasticsearch\n    environment:\n      - discovery.type=single-node  # 单节点模式\n      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制\n      - ELASTIC_PASSWORD=Ytest@123  # 设置 Elasticsearch 密码\n    volumes:\n      - ./elasticsearch/data:/usr/share/elasticsearch/data  # 数据持久化\n#      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml  # 自定义配置（可选）\n    ports:\n      - \"9200:9200\"  # REST API\n      - \"9300:9300\"  # 集群通信\n    networks:\n      - elk\n  logstash:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/logstash:7.14.0\n    container_name: logstash\n    volumes:\n      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # 自定义 Logstash 管道配置\n      - ./logstash/logs:/usr/share/logstash/logs  # 日志持久化\n    environment:\n      - LS_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制\n    ports:\n      - \"5044:5044\"  # Beats 输入端口（如 Filebeat）\n      - \"5000:5000/tcp\"  # TCP 输入\n      - \"5000:5000/udp\"  # UDP 输入\n    depends_on:\n      - elasticsearch\n    networks:\n      - elk\n  kibana:\n    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/kibana:7.14.0\n    container_name: kibana\n    environment:\n      - I18N_LOCALE=zh-CN\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 指向 Elasticsearch 服务\n      - ELASTICSEARCH_USERNAME=elastic  # 默认用户名\n      - ELASTICSEARCH_PASSWORD=Ytest@123  # 与 Elasticsearch 密码一致\n    ports:\n      - \"5601:5601\"  # Kibana Web 界面\n    depends_on:\n      - elasticsearch\n    networks:\n      - elk\nnetworks:\n  elk:\n    driver: bridge\nEOF\nmkdir ./logstash/config -p\ncat >> ./logstash/config/logstash.conf << EOF\n# ./logstash/config/logstash.conf\ninput {\n  tcp {\n    port => 5000  # 监听 TCP 日志\n  }\n  beats {\n    port => 5044  # 接收 Filebeat 输入\n  }\n}\nfilter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }  # 解析 Apache 日志\n  }\n  date {\n    match => [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]  # 时间解析\n  }\n}\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    user => \"elastic\"\n    password => \"Ytest@123\"\n    index => \"logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n  }\n}\nEOF\nchmod 777 elasticsearch/data\n```\n# filebeat\n**根据不同tag写入不同的logstash后续分割和输出建立索引好区分**\n```\nfilebeat.inputs: # filebeat input输入\n- type: log    # 标准输入\n  enabled: true  # 启用标准输入\n  paths:\n    - /var/log/*\n  tags: [\"system\"]\n  #  fields:\n  #    type: \"system_log\"\n- type: filestream\n  paths:\n    - \"/var/log/nginx/*.log\"\n  tags: [\"nginx\"]   # 标记为 nginx 日志\n#output.console:\n# enabled: true               # 启用控制台输出\n  #  pretty: true                # 美化 JSON 格式\n  # codec.json:\n  #   pretty: true\n  # escape_html: false        # 不转义 HTML 符号（保持原始格式）\n \n# 输出到 Logstash - 用于生产数据处理\noutput.logstash:\n  enabled: true               # 启用 Logstash 输出\n  #  when:\n  #    equals:\n  #      fields.type: \"system_log\"\n  hosts: [\"127.0.0.1:5044\"]  # Logstash 的地址和端口（支持多个主机负载均衡）\n  when.contains:\n      tags: \"system\"  # 匹配 tags 包含 \"system\"\n  hosts: [\"127.0.0.1:5045\"]\n  enabled: true\n  when.contains:\n    tags: \"nginx\"  # 匹配 tags 包含 \"nginx\"\n```\n# logstash\n**根据不同type进行过滤和输出索引**\n```\nLogstash Reference [7.10] | Elastic\n\ninput {\n  tcp {\n    port => 5000  # 监听 TCP 日志\n  }\n  beats {\n    port => 5044  # 接收 Filebeat 输入\n    type => \"system\"\n  }\n  beats {\n    port => 5045  # 接收 Filebeat 输入\n    type => \"nginx\"\n  }\n}\n  \n \nfilter {\n  date {\n    match => [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]  # 时间解析\n  }\n \n  if[type] == \"nginx\" {\n    grok {\n      match => { \"message\" => \"%{HTTPD_COMMONLOG}\" }  # 解析 nginx 日志,如果不区分；system类型是解析不了的，会直接报错\n      remove_field => [\"@version\"]\n     }\n  }\n  #对于system类型可以再写个if来单独过滤\n  if[type] == \"system\" {\n    grok {\n      match =>  {\"message\" => \"%{IPV4:ip}\"}  \n      remove_field => [\"@version\"]\n     }\n    mutate {  #这里过滤器乱写的，需要根据自身的业务配置\n        remove_field => [\"timestamp\"]\n        gsub => [\"message\",\"\\s\",\"| \"]\n        split => [\"message\",\"|\"]\n        replace => { \"timenew\" =>  \"%{+yyyy-MM-dd}\" }\n        add_field => {\n         \"year\" => \"%{+yyyy}\"\n         \"month\" => \"%{+MM}\"\n         \"day\" => \"%{+dd}\"\n         \"status\" => \"%{[message][1]}\"\n         \"code\" => \"%{[message][2]}\"\n        }\n    }\n  }\n \n  \n}\n#必须通过type指定不同输出创建不同的index =>,否则index的字段不一样，当第一个index结构确定后，第二个输入无法输出到第一个index，因为字段不一样\noutput {\n  if \"system\" in [tags] {\n    elasticsearch {\n      hosts => [\"elasticsearch:9200\"]\n      user => \"elastic\"\n      password => \"Ytest@123\"\n      index => \"filebeat-system-logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n    }\n  }  \n  if \"nginx\" in [tags] {\n    elasticsearch {\n      hosts => [\"elasticsearch:9200\"]\n      user => \"elastic\"\n      password => \"Ytest@123\"\n      index => \"filebeat-nginx-logs-%{+YYYY.MM.dd}\"  # 按日期创建索引\n    }\n  }  \n}\n```\n# elasticsearch\n>常用语法\n>>/_cat <br>\n/_cat/master?help<br>\n/_cat/indices?v  显示title<br>\n/_cat/indices<br>\nlogs-2025.03.24 为索引名称<br>\n/logs-2025.03.24/_search 查看文档<br>\n/logs-2025.03.24/ 查看索引结构<br>\n/logs-2025.03.24/_doc/_search?q=message:test\n","slug":"elfk","published":1,"updated":"2025-04-23T12:37:33.325Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qw60003qmm4a4ptfi9b","content":"<blockquote>\n<p>filebeat不建议容器启动，适合放到每个节点采集日志统一发给logstash；如果全部输出到elasticsearch会导致负载比较高；不建议每个节点用logstash采集因为比较重，filebeat比较轻量级</p>\n</blockquote>\n<h1 id=\"安装elfk\"><a href=\"#安装elfk\" class=\"headerlink\" title=\"安装elfk\"></a>安装elfk</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -SL https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">将可执行权限赋予安装目标路径中的独立二进制文件</span></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.2-x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt;&gt; ./elk.yml &lt;&lt; EOF</span><br><span class=\"line\">version: &#x27;3.8&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  elasticsearch:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/elasticsearch:7.14.0</span><br><span class=\"line\">    container_name: elasticsearch</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - discovery.type=single-node  # 单节点模式</span><br><span class=\"line\">      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制</span><br><span class=\"line\">      - ELASTIC_PASSWORD=Ytest@123  # 设置 Elasticsearch 密码</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./elasticsearch/data:/usr/share/elasticsearch/data  # 数据持久化</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">     - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml  <span class=\"comment\"># 自定义配置（可选）</span></span></span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;9200:9200&quot;  # REST API</span><br><span class=\"line\">      - &quot;9300:9300&quot;  # 集群通信</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">  logstash:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/logstash:7.14.0</span><br><span class=\"line\">    container_name: logstash</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # 自定义 Logstash 管道配置</span><br><span class=\"line\">      - ./logstash/logs:/usr/share/logstash/logs  # 日志持久化</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - LS_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5044:5044&quot;  # Beats 输入端口（如 Filebeat）</span><br><span class=\"line\">      - &quot;5000:5000/tcp&quot;  # TCP 输入</span><br><span class=\"line\">      - &quot;5000:5000/udp&quot;  # UDP 输入</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - elasticsearch</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">  kibana:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/kibana:7.14.0</span><br><span class=\"line\">    container_name: kibana</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - I18N_LOCALE=zh-CN</span><br><span class=\"line\">      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 指向 Elasticsearch 服务</span><br><span class=\"line\">      - ELASTICSEARCH_USERNAME=elastic  # 默认用户名</span><br><span class=\"line\">      - ELASTICSEARCH_PASSWORD=Ytest@123  # 与 Elasticsearch 密码一致</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5601:5601&quot;  # Kibana Web 界面</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - elasticsearch</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">networks:</span><br><span class=\"line\">  elk:</span><br><span class=\"line\">    driver: bridge</span><br><span class=\"line\">EOF</span><br><span class=\"line\">mkdir ./logstash/config -p</span><br><span class=\"line\">cat &gt;&gt; ./logstash/config/logstash.conf &lt;&lt; EOF</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">./logstash/config/logstash.conf</span></span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  tcp &#123;</span><br><span class=\"line\">    port =&gt; 5000  # 监听 TCP 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5044  # 接收 Filebeat 输入</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  grok &#123;</span><br><span class=\"line\">    match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;  # 解析 Apache 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  date &#123;</span><br><span class=\"line\">    match =&gt; [ &quot;timestamp&quot;, &quot;dd/MMM/yyyy:HH:mm:ss Z&quot; ]  # 时间解析</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">    password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">    index =&gt; &quot;logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">chmod 777 elasticsearch/data</span><br></pre></td></tr></table></figure>\n<h1 id=\"filebeat\"><a href=\"#filebeat\" class=\"headerlink\" title=\"filebeat\"></a>filebeat</h1><p><strong>根据不同tag写入不同的logstash后续分割和输出建立索引好区分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs: # filebeat input输入</span><br><span class=\"line\">- type: log    # 标准输入</span><br><span class=\"line\">  enabled: true  # 启用标准输入</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /var/log/*</span><br><span class=\"line\">  tags: [&quot;system&quot;]</span><br><span class=\"line\">  #  fields:</span><br><span class=\"line\">  #    type: &quot;system_log&quot;</span><br><span class=\"line\">- type: filestream</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - &quot;/var/log/nginx/*.log&quot;</span><br><span class=\"line\">  tags: [&quot;nginx&quot;]   # 标记为 nginx 日志</span><br><span class=\"line\">#output.console:</span><br><span class=\"line\"># enabled: true               # 启用控制台输出</span><br><span class=\"line\">  #  pretty: true                # 美化 JSON 格式</span><br><span class=\"line\">  # codec.json:</span><br><span class=\"line\">  #   pretty: true</span><br><span class=\"line\">  # escape_html: false        # 不转义 HTML 符号（保持原始格式）</span><br><span class=\"line\"> </span><br><span class=\"line\"># 输出到 Logstash - 用于生产数据处理</span><br><span class=\"line\">output.logstash:</span><br><span class=\"line\">  enabled: true               # 启用 Logstash 输出</span><br><span class=\"line\">  #  when:</span><br><span class=\"line\">  #    equals:</span><br><span class=\"line\">  #      fields.type: &quot;system_log&quot;</span><br><span class=\"line\">  hosts: [&quot;127.0.0.1:5044&quot;]  # Logstash 的地址和端口（支持多个主机负载均衡）</span><br><span class=\"line\">  when.contains:</span><br><span class=\"line\">      tags: &quot;system&quot;  # 匹配 tags 包含 &quot;system&quot;</span><br><span class=\"line\">  hosts: [&quot;127.0.0.1:5045&quot;]</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  when.contains:</span><br><span class=\"line\">    tags: &quot;nginx&quot;  # 匹配 tags 包含 &quot;nginx&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"logstash\"><a href=\"#logstash\" class=\"headerlink\" title=\"logstash\"></a>logstash</h1><p><strong>根据不同type进行过滤和输出索引</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logstash Reference [7.10] | Elastic</span><br><span class=\"line\"></span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  tcp &#123;</span><br><span class=\"line\">    port =&gt; 5000  # 监听 TCP 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5044  # 接收 Filebeat 输入</span><br><span class=\"line\">    type =&gt; &quot;system&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5045  # 接收 Filebeat 输入</span><br><span class=\"line\">    type =&gt; &quot;nginx&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"> </span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  date &#123;</span><br><span class=\"line\">    match =&gt; [ &quot;timestamp&quot;, &quot;dd/MMM/yyyy:HH:mm:ss Z&quot; ]  # 时间解析</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  if[type] == &quot;nginx&quot; &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">      match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;HTTPD_COMMONLOG&#125;&quot; &#125;  # 解析 nginx 日志,如果不区分；system类型是解析不了的，会直接报错</span><br><span class=\"line\">      remove_field =&gt; [&quot;@version&quot;]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  #对于system类型可以再写个if来单独过滤</span><br><span class=\"line\">  if[type] == &quot;system&quot; &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">      match =&gt;  &#123;&quot;message&quot; =&gt; &quot;%&#123;IPV4:ip&#125;&quot;&#125;  </span><br><span class=\"line\">      remove_field =&gt; [&quot;@version&quot;]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    mutate &#123;  #这里过滤器乱写的，需要根据自身的业务配置</span><br><span class=\"line\">        remove_field =&gt; [&quot;timestamp&quot;]</span><br><span class=\"line\">        gsub =&gt; [&quot;message&quot;,&quot;\\s&quot;,&quot;| &quot;]</span><br><span class=\"line\">        split =&gt; [&quot;message&quot;,&quot;|&quot;]</span><br><span class=\"line\">        replace =&gt; &#123; &quot;timenew&quot; =&gt;  &quot;%&#123;+yyyy-MM-dd&#125;&quot; &#125;</span><br><span class=\"line\">        add_field =&gt; &#123;</span><br><span class=\"line\">         &quot;year&quot; =&gt; &quot;%&#123;+yyyy&#125;&quot;</span><br><span class=\"line\">         &quot;month&quot; =&gt; &quot;%&#123;+MM&#125;&quot;</span><br><span class=\"line\">         &quot;day&quot; =&gt; &quot;%&#123;+dd&#125;&quot;</span><br><span class=\"line\">         &quot;status&quot; =&gt; &quot;%&#123;[message][1]&#125;&quot;</span><br><span class=\"line\">         &quot;code&quot; =&gt; &quot;%&#123;[message][2]&#125;&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#必须通过type指定不同输出创建不同的index =&gt;,否则index的字段不一样，当第一个index结构确定后，第二个输入无法输出到第一个index，因为字段不一样</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  if &quot;system&quot; in [tags] &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">      hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">      user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">      password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">      index =&gt; &quot;filebeat-system-logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  if &quot;nginx&quot; in [tags] &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">      hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">      user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">      password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">      index =&gt; &quot;filebeat-nginx-logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"elasticsearch\"><a href=\"#elasticsearch\" class=\"headerlink\" title=\"elasticsearch\"></a>elasticsearch</h1><blockquote>\n<p>常用语法</p>\n<blockquote>\n<p>&#x2F;_cat <br><br>&#x2F;_cat&#x2F;master?help<br><br>&#x2F;_cat&#x2F;indices?v  显示title<br><br>&#x2F;_cat&#x2F;indices<br><br>logs-2025.03.24 为索引名称<br><br>&#x2F;logs-2025.03.24&#x2F;_search 查看文档<br><br>&#x2F;logs-2025.03.24&#x2F; 查看索引结构<br><br>&#x2F;logs-2025.03.24&#x2F;_doc&#x2F;_search?q&#x3D;message:test</p>\n</blockquote>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>filebeat不建议容器启动，适合放到每个节点采集日志统一发给logstash；如果全部输出到elasticsearch会导致负载比较高；不建议每个节点用logstash采集因为比较重，filebeat比较轻量级</p>\n</blockquote>\n<h1 id=\"安装elfk\"><a href=\"#安装elfk\" class=\"headerlink\" title=\"安装elfk\"></a>安装elfk</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -SL https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">将可执行权限赋予安装目标路径中的独立二进制文件</span></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.2-x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt;&gt; ./elk.yml &lt;&lt; EOF</span><br><span class=\"line\">version: &#x27;3.8&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  elasticsearch:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/elasticsearch:7.14.0</span><br><span class=\"line\">    container_name: elasticsearch</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - discovery.type=single-node  # 单节点模式</span><br><span class=\"line\">      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制</span><br><span class=\"line\">      - ELASTIC_PASSWORD=Ytest@123  # 设置 Elasticsearch 密码</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./elasticsearch/data:/usr/share/elasticsearch/data  # 数据持久化</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">     - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml  <span class=\"comment\"># 自定义配置（可选）</span></span></span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;9200:9200&quot;  # REST API</span><br><span class=\"line\">      - &quot;9300:9300&quot;  # 集群通信</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">  logstash:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/logstash:7.14.0</span><br><span class=\"line\">    container_name: logstash</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # 自定义 Logstash 管道配置</span><br><span class=\"line\">      - ./logstash/logs:/usr/share/logstash/logs  # 日志持久化</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - LS_JAVA_OPTS=-Xms512m -Xmx512m  # JVM 堆内存限制</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5044:5044&quot;  # Beats 输入端口（如 Filebeat）</span><br><span class=\"line\">      - &quot;5000:5000/tcp&quot;  # TCP 输入</span><br><span class=\"line\">      - &quot;5000:5000/udp&quot;  # UDP 输入</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - elasticsearch</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">  kibana:</span><br><span class=\"line\">    image: registry.cn-hangzhou.aliyuncs.com/lky-deploy/kibana:7.14.0</span><br><span class=\"line\">    container_name: kibana</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - I18N_LOCALE=zh-CN</span><br><span class=\"line\">      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 指向 Elasticsearch 服务</span><br><span class=\"line\">      - ELASTICSEARCH_USERNAME=elastic  # 默认用户名</span><br><span class=\"line\">      - ELASTICSEARCH_PASSWORD=Ytest@123  # 与 Elasticsearch 密码一致</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5601:5601&quot;  # Kibana Web 界面</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - elasticsearch</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - elk</span><br><span class=\"line\">networks:</span><br><span class=\"line\">  elk:</span><br><span class=\"line\">    driver: bridge</span><br><span class=\"line\">EOF</span><br><span class=\"line\">mkdir ./logstash/config -p</span><br><span class=\"line\">cat &gt;&gt; ./logstash/config/logstash.conf &lt;&lt; EOF</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">./logstash/config/logstash.conf</span></span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  tcp &#123;</span><br><span class=\"line\">    port =&gt; 5000  # 监听 TCP 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5044  # 接收 Filebeat 输入</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  grok &#123;</span><br><span class=\"line\">    match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;  # 解析 Apache 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  date &#123;</span><br><span class=\"line\">    match =&gt; [ &quot;timestamp&quot;, &quot;dd/MMM/yyyy:HH:mm:ss Z&quot; ]  # 时间解析</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">    password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">    index =&gt; &quot;logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">chmod 777 elasticsearch/data</span><br></pre></td></tr></table></figure>\n<h1 id=\"filebeat\"><a href=\"#filebeat\" class=\"headerlink\" title=\"filebeat\"></a>filebeat</h1><p><strong>根据不同tag写入不同的logstash后续分割和输出建立索引好区分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs: # filebeat input输入</span><br><span class=\"line\">- type: log    # 标准输入</span><br><span class=\"line\">  enabled: true  # 启用标准输入</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /var/log/*</span><br><span class=\"line\">  tags: [&quot;system&quot;]</span><br><span class=\"line\">  #  fields:</span><br><span class=\"line\">  #    type: &quot;system_log&quot;</span><br><span class=\"line\">- type: filestream</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - &quot;/var/log/nginx/*.log&quot;</span><br><span class=\"line\">  tags: [&quot;nginx&quot;]   # 标记为 nginx 日志</span><br><span class=\"line\">#output.console:</span><br><span class=\"line\"># enabled: true               # 启用控制台输出</span><br><span class=\"line\">  #  pretty: true                # 美化 JSON 格式</span><br><span class=\"line\">  # codec.json:</span><br><span class=\"line\">  #   pretty: true</span><br><span class=\"line\">  # escape_html: false        # 不转义 HTML 符号（保持原始格式）</span><br><span class=\"line\"> </span><br><span class=\"line\"># 输出到 Logstash - 用于生产数据处理</span><br><span class=\"line\">output.logstash:</span><br><span class=\"line\">  enabled: true               # 启用 Logstash 输出</span><br><span class=\"line\">  #  when:</span><br><span class=\"line\">  #    equals:</span><br><span class=\"line\">  #      fields.type: &quot;system_log&quot;</span><br><span class=\"line\">  hosts: [&quot;127.0.0.1:5044&quot;]  # Logstash 的地址和端口（支持多个主机负载均衡）</span><br><span class=\"line\">  when.contains:</span><br><span class=\"line\">      tags: &quot;system&quot;  # 匹配 tags 包含 &quot;system&quot;</span><br><span class=\"line\">  hosts: [&quot;127.0.0.1:5045&quot;]</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  when.contains:</span><br><span class=\"line\">    tags: &quot;nginx&quot;  # 匹配 tags 包含 &quot;nginx&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"logstash\"><a href=\"#logstash\" class=\"headerlink\" title=\"logstash\"></a>logstash</h1><p><strong>根据不同type进行过滤和输出索引</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logstash Reference [7.10] | Elastic</span><br><span class=\"line\"></span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  tcp &#123;</span><br><span class=\"line\">    port =&gt; 5000  # 监听 TCP 日志</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5044  # 接收 Filebeat 输入</span><br><span class=\"line\">    type =&gt; &quot;system&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; 5045  # 接收 Filebeat 输入</span><br><span class=\"line\">    type =&gt; &quot;nginx&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"> </span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  date &#123;</span><br><span class=\"line\">    match =&gt; [ &quot;timestamp&quot;, &quot;dd/MMM/yyyy:HH:mm:ss Z&quot; ]  # 时间解析</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  if[type] == &quot;nginx&quot; &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">      match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;HTTPD_COMMONLOG&#125;&quot; &#125;  # 解析 nginx 日志,如果不区分；system类型是解析不了的，会直接报错</span><br><span class=\"line\">      remove_field =&gt; [&quot;@version&quot;]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  #对于system类型可以再写个if来单独过滤</span><br><span class=\"line\">  if[type] == &quot;system&quot; &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">      match =&gt;  &#123;&quot;message&quot; =&gt; &quot;%&#123;IPV4:ip&#125;&quot;&#125;  </span><br><span class=\"line\">      remove_field =&gt; [&quot;@version&quot;]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    mutate &#123;  #这里过滤器乱写的，需要根据自身的业务配置</span><br><span class=\"line\">        remove_field =&gt; [&quot;timestamp&quot;]</span><br><span class=\"line\">        gsub =&gt; [&quot;message&quot;,&quot;\\s&quot;,&quot;| &quot;]</span><br><span class=\"line\">        split =&gt; [&quot;message&quot;,&quot;|&quot;]</span><br><span class=\"line\">        replace =&gt; &#123; &quot;timenew&quot; =&gt;  &quot;%&#123;+yyyy-MM-dd&#125;&quot; &#125;</span><br><span class=\"line\">        add_field =&gt; &#123;</span><br><span class=\"line\">         &quot;year&quot; =&gt; &quot;%&#123;+yyyy&#125;&quot;</span><br><span class=\"line\">         &quot;month&quot; =&gt; &quot;%&#123;+MM&#125;&quot;</span><br><span class=\"line\">         &quot;day&quot; =&gt; &quot;%&#123;+dd&#125;&quot;</span><br><span class=\"line\">         &quot;status&quot; =&gt; &quot;%&#123;[message][1]&#125;&quot;</span><br><span class=\"line\">         &quot;code&quot; =&gt; &quot;%&#123;[message][2]&#125;&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#必须通过type指定不同输出创建不同的index =&gt;,否则index的字段不一样，当第一个index结构确定后，第二个输入无法输出到第一个index，因为字段不一样</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  if &quot;system&quot; in [tags] &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">      hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">      user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">      password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">      index =&gt; &quot;filebeat-system-logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  if &quot;nginx&quot; in [tags] &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">      hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">      user =&gt; &quot;elastic&quot;</span><br><span class=\"line\">      password =&gt; &quot;Ytest@123&quot;</span><br><span class=\"line\">      index =&gt; &quot;filebeat-nginx-logs-%&#123;+YYYY.MM.dd&#125;&quot;  # 按日期创建索引</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"elasticsearch\"><a href=\"#elasticsearch\" class=\"headerlink\" title=\"elasticsearch\"></a>elasticsearch</h1><blockquote>\n<p>常用语法</p>\n<blockquote>\n<p>&#x2F;_cat <br><br>&#x2F;_cat&#x2F;master?help<br><br>&#x2F;_cat&#x2F;indices?v  显示title<br><br>&#x2F;_cat&#x2F;indices<br><br>logs-2025.03.24 为索引名称<br><br>&#x2F;logs-2025.03.24&#x2F;_search 查看文档<br><br>&#x2F;logs-2025.03.24&#x2F; 查看索引结构<br><br>&#x2F;logs-2025.03.24&#x2F;_doc&#x2F;_search?q&#x3D;message:test</p>\n</blockquote>\n</blockquote>\n"},{"title":"iptables防止ddos(cc)","date":"2025-04-21T11:17:48.000Z","_content":"> 基本上发行版都是自带的，轻量级，不需要额外下载\nFail2Ban也可以但是需要额外下载\n\n# 如何配置使用\n```shell\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set\n\n参数    作用\n-I INPUT    将规则插入到 INPUT 链的最前面\n-p tcp --dport 80    匹配目标端口为 80 的 TCP 流量\n-m state --state NEW    仅匹配 新建连接（如 TCP 的 SYN 包）\n-m recent --set    将来源 IP 记录到 recent 模块的默认列表（/proc/net/xt_recent/DEFAULT）\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 100 -j DROP\n\n参数    作用\n-m recent --update --seconds 60 --hitcount 100    检查 IP 在 60 秒内是否发起超过 100 次新连接\n-j DROP    若超限，直接丢弃数据包\n```\n\n## 效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\n\n![alt text](image.png)\n![alt text](image-1.png)\n\n\n\n## 经过测试 --hitcount 大于20 会报错\n![alt text](image-2.png)\n\n### 解决办法 \n```shell\necho options xt_recent ip_pkt_list_tot=200 > /etc/modprobe.d/xt.conf\n\nmodprobe -r xt_recent && modprobe xt_recent 重新加载\n\n查看 lsmod |grep xt  ；cat /sys/module/xt_recent/parameters/ip_pkt_list_tot 对应 xt.conf\n```\n# 额外补充\n\n若其他规则也使用 recent 默认列表，可能导致误判，可以通过--name 指定名称分类\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set --name HTTP_CC\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 200 --name HTTP_CC -j DROP\n\n则 /proc/net/xt_recent/HTTP_CC 叫 HTTP_CC\n\n","source":"_posts/iptables防止ddos-cc.md","raw":"---\ntitle: iptables防止ddos(cc)\ndate: 2025-04-21 19:17:48\ntags:\ncategories: linux\n---\n> 基本上发行版都是自带的，轻量级，不需要额外下载\nFail2Ban也可以但是需要额外下载\n\n# 如何配置使用\n```shell\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set\n\n参数    作用\n-I INPUT    将规则插入到 INPUT 链的最前面\n-p tcp --dport 80    匹配目标端口为 80 的 TCP 流量\n-m state --state NEW    仅匹配 新建连接（如 TCP 的 SYN 包）\n-m recent --set    将来源 IP 记录到 recent 模块的默认列表（/proc/net/xt_recent/DEFAULT）\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 100 -j DROP\n\n参数    作用\n-m recent --update --seconds 60 --hitcount 100    检查 IP 在 60 秒内是否发起超过 100 次新连接\n-j DROP    若超限，直接丢弃数据包\n```\n\n## 效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\n\n![alt text](image.png)\n![alt text](image-1.png)\n\n\n\n## 经过测试 --hitcount 大于20 会报错\n![alt text](image-2.png)\n\n### 解决办法 \n```shell\necho options xt_recent ip_pkt_list_tot=200 > /etc/modprobe.d/xt.conf\n\nmodprobe -r xt_recent && modprobe xt_recent 重新加载\n\n查看 lsmod |grep xt  ；cat /sys/module/xt_recent/parameters/ip_pkt_list_tot 对应 xt.conf\n```\n# 额外补充\n\n若其他规则也使用 recent 默认列表，可能导致误判，可以通过--name 指定名称分类\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set --name HTTP_CC\n\niptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 200 --name HTTP_CC -j DROP\n\n则 /proc/net/xt_recent/HTTP_CC 叫 HTTP_CC\n\n","slug":"iptables防止ddos-cc","published":1,"updated":"2025-04-23T12:37:33.327Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwc0007qmm40nz11163","content":"<blockquote>\n<p>基本上发行版都是自带的，轻量级，不需要额外下载<br>Fail2Ban也可以但是需要额外下载</p>\n</blockquote>\n<h1 id=\"如何配置使用\"><a href=\"#如何配置使用\" class=\"headerlink\" title=\"如何配置使用\"></a>如何配置使用</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set</span><br><span class=\"line\"></span><br><span class=\"line\">参数    作用</span><br><span class=\"line\">-I INPUT    将规则插入到 INPUT 链的最前面</span><br><span class=\"line\">-p tcp --dport 80    匹配目标端口为 80 的 TCP 流量</span><br><span class=\"line\">-m state --state NEW    仅匹配 新建连接（如 TCP 的 SYN 包）</span><br><span class=\"line\">-m recent --set    将来源 IP 记录到 recent 模块的默认列表（/proc/net/xt_recent/DEFAULT）</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 100 -j DROP</span><br><span class=\"line\"></span><br><span class=\"line\">参数    作用</span><br><span class=\"line\">-m recent --update --seconds 60 --hitcount 100    检查 IP 在 60 秒内是否发起超过 100 次新连接</span><br><span class=\"line\">-j DROP    若超限，直接丢弃数据包</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\"><a href=\"#效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\" class=\"headerlink\" title=\"效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\"></a>效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复</h2><p><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image.png\" alt=\"alt text\"><br><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image-1.png\" alt=\"alt text\"></p>\n<h2 id=\"经过测试-–hitcount-大于20-会报错\"><a href=\"#经过测试-–hitcount-大于20-会报错\" class=\"headerlink\" title=\"经过测试 –hitcount 大于20 会报错\"></a>经过测试 –hitcount 大于20 会报错</h2><p><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image-2.png\" alt=\"alt text\"></p>\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo options xt_recent ip_pkt_list_tot=200 &gt; /etc/modprobe.d/xt.conf</span><br><span class=\"line\"></span><br><span class=\"line\">modprobe -r xt_recent &amp;&amp; modprobe xt_recent 重新加载</span><br><span class=\"line\"></span><br><span class=\"line\">查看 lsmod |grep xt  ；cat /sys/module/xt_recent/parameters/ip_pkt_list_tot 对应 xt.conf</span><br></pre></td></tr></table></figure>\n<h1 id=\"额外补充\"><a href=\"#额外补充\" class=\"headerlink\" title=\"额外补充\"></a>额外补充</h1><p>若其他规则也使用 recent 默认列表，可能导致误判，可以通过–name 指定名称分类</p>\n<p>iptables -I INPUT -p tcp –dport 80 -m state –state NEW -m recent –set –name HTTP_CC</p>\n<p>iptables -I INPUT -p tcp –dport 80 -m state –state NEW -m recent –update –seconds 60 –hitcount 200 –name HTTP_CC -j DROP</p>\n<p>则 &#x2F;proc&#x2F;net&#x2F;xt_recent&#x2F;HTTP_CC 叫 HTTP_CC</p>\n","excerpt":"","more":"<blockquote>\n<p>基本上发行版都是自带的，轻量级，不需要额外下载<br>Fail2Ban也可以但是需要额外下载</p>\n</blockquote>\n<h1 id=\"如何配置使用\"><a href=\"#如何配置使用\" class=\"headerlink\" title=\"如何配置使用\"></a>如何配置使用</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --set</span><br><span class=\"line\"></span><br><span class=\"line\">参数    作用</span><br><span class=\"line\">-I INPUT    将规则插入到 INPUT 链的最前面</span><br><span class=\"line\">-p tcp --dport 80    匹配目标端口为 80 的 TCP 流量</span><br><span class=\"line\">-m state --state NEW    仅匹配 新建连接（如 TCP 的 SYN 包）</span><br><span class=\"line\">-m recent --set    将来源 IP 记录到 recent 模块的默认列表（/proc/net/xt_recent/DEFAULT）</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -I INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 60 --hitcount 100 -j DROP</span><br><span class=\"line\"></span><br><span class=\"line\">参数    作用</span><br><span class=\"line\">-m recent --update --seconds 60 --hitcount 100    检查 IP 在 60 秒内是否发起超过 100 次新连接</span><br><span class=\"line\">-j DROP    若超限，直接丢弃数据包</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\"><a href=\"#效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\" class=\"headerlink\" title=\"效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复\"></a>效果图，到指定次数自动丢弃数据包，端口不通，到达指定时间自动恢复</h2><p><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image.png\" alt=\"alt text\"><br><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image-1.png\" alt=\"alt text\"></p>\n<h2 id=\"经过测试-–hitcount-大于20-会报错\"><a href=\"#经过测试-–hitcount-大于20-会报错\" class=\"headerlink\" title=\"经过测试 –hitcount 大于20 会报错\"></a>经过测试 –hitcount 大于20 会报错</h2><p><img src=\"/2025/04/21/iptables%E9%98%B2%E6%AD%A2ddos-cc/image-2.png\" alt=\"alt text\"></p>\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo options xt_recent ip_pkt_list_tot=200 &gt; /etc/modprobe.d/xt.conf</span><br><span class=\"line\"></span><br><span class=\"line\">modprobe -r xt_recent &amp;&amp; modprobe xt_recent 重新加载</span><br><span class=\"line\"></span><br><span class=\"line\">查看 lsmod |grep xt  ；cat /sys/module/xt_recent/parameters/ip_pkt_list_tot 对应 xt.conf</span><br></pre></td></tr></table></figure>\n<h1 id=\"额外补充\"><a href=\"#额外补充\" class=\"headerlink\" title=\"额外补充\"></a>额外补充</h1><p>若其他规则也使用 recent 默认列表，可能导致误判，可以通过–name 指定名称分类</p>\n<p>iptables -I INPUT -p tcp –dport 80 -m state –state NEW -m recent –set –name HTTP_CC</p>\n<p>iptables -I INPUT -p tcp –dport 80 -m state –state NEW -m recent –update –seconds 60 –hitcount 200 –name HTTP_CC -j DROP</p>\n<p>则 &#x2F;proc&#x2F;net&#x2F;xt_recent&#x2F;HTTP_CC 叫 HTTP_CC</p>\n"},{"title":"miniconda3","date":"2025-04-21T10:40:55.000Z","_content":"> conda是一个包和环境管理工具，用于创建、管理和切换Python的虚拟环境\n\n# 安装\n```shell\nmkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm ~/miniconda3/miniconda.sh\nsource ~/miniconda3/bin/activate\n```\n# 使用\n```shell\n1. conda --version #查看conda版本，验证是否安装\n2. conda update conda #更新至最新版本，也会更新其它相关包\n3. conda update --all #更新所有包\n4. conda update package_name #更新指定的包\n5. conda create -n env_name package_name #创建名为env_name的新环境，并在该环境下安装名为package_name 的包，可以指定新环境的版本号，例如：conda create -n python2 python=python2.7 numpy pandas，创建了python2环境，python版本为2.7，同时还安装了numpy pandas包\n6. source activate env_name #切换至env_name环境\n7. source deactivate #退出环境\n8. conda info -e #显示所有已经创建的环境\n9. conda create --name new_env_name --clone old_env_name #复制old_env_name为new_env_name\n10. conda remove --name env_name –all #删除环境\n11. conda list #查看所有已经安装的包\n12. conda install package_name #在当前环境中安装包\n13. conda install --name env_name package_name #在指定环境中安装包\n14. conda remove -- name env_name package #删除指定环境中的包\n15. conda remove package #删除当前环境中的包\n16. conda env remove -n env_name #采用第10条的方法删除环境失败时，可采用这种方法\n```\n\n\n\n两个环境，一个有request一个没有，隔离作用\n\n\n# 镜像源\n```shell\n# 查看镜像源\nconda config --show-sources\n# 添加镜像源\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n# 从镜像源中安装包时显示来源\nconda config --set show_channel_urls yes\n# 删除镜像源\nconda config --remove channels https://XXX\n# 删除配置的镜像源，使用默认镜像源\nconda config --remove-key channels\n```\n\n# 打包运行环境\n```shell\npip install conda-pack\nconda pack -n my_env_name -o out_name.tar.gz\ntar -zxvf 2.7.tar.gz -C 2.7\nconda info -e\nsource activate my_env_name\n```\n\n","source":"_posts/miniconda3.md","raw":"---\ntitle: miniconda3\ndate: 2025-04-21 18:40:55\ntags:\ncategories: python\n---\n> conda是一个包和环境管理工具，用于创建、管理和切换Python的虚拟环境\n\n# 安装\n```shell\nmkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm ~/miniconda3/miniconda.sh\nsource ~/miniconda3/bin/activate\n```\n# 使用\n```shell\n1. conda --version #查看conda版本，验证是否安装\n2. conda update conda #更新至最新版本，也会更新其它相关包\n3. conda update --all #更新所有包\n4. conda update package_name #更新指定的包\n5. conda create -n env_name package_name #创建名为env_name的新环境，并在该环境下安装名为package_name 的包，可以指定新环境的版本号，例如：conda create -n python2 python=python2.7 numpy pandas，创建了python2环境，python版本为2.7，同时还安装了numpy pandas包\n6. source activate env_name #切换至env_name环境\n7. source deactivate #退出环境\n8. conda info -e #显示所有已经创建的环境\n9. conda create --name new_env_name --clone old_env_name #复制old_env_name为new_env_name\n10. conda remove --name env_name –all #删除环境\n11. conda list #查看所有已经安装的包\n12. conda install package_name #在当前环境中安装包\n13. conda install --name env_name package_name #在指定环境中安装包\n14. conda remove -- name env_name package #删除指定环境中的包\n15. conda remove package #删除当前环境中的包\n16. conda env remove -n env_name #采用第10条的方法删除环境失败时，可采用这种方法\n```\n\n\n\n两个环境，一个有request一个没有，隔离作用\n\n\n# 镜像源\n```shell\n# 查看镜像源\nconda config --show-sources\n# 添加镜像源\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n# 从镜像源中安装包时显示来源\nconda config --set show_channel_urls yes\n# 删除镜像源\nconda config --remove channels https://XXX\n# 删除配置的镜像源，使用默认镜像源\nconda config --remove-key channels\n```\n\n# 打包运行环境\n```shell\npip install conda-pack\nconda pack -n my_env_name -o out_name.tar.gz\ntar -zxvf 2.7.tar.gz -C 2.7\nconda info -e\nsource activate my_env_name\n```\n\n","slug":"miniconda3","published":1,"updated":"2025-04-23T12:37:33.343Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwe0009qmm44fsn60x6","content":"<blockquote>\n<p>conda是一个包和环境管理工具，用于创建、管理和切换Python的虚拟环境</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p ~/miniconda3</span><br><span class=\"line\">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh</span><br><span class=\"line\">bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3</span><br><span class=\"line\">rm ~/miniconda3/miniconda.sh</span><br><span class=\"line\">source ~/miniconda3/bin/activate</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. conda --version #查看conda版本，验证是否安装</span><br><span class=\"line\">2. conda update conda #更新至最新版本，也会更新其它相关包</span><br><span class=\"line\">3. conda update --all #更新所有包</span><br><span class=\"line\">4. conda update package_name #更新指定的包</span><br><span class=\"line\">5. conda create -n env_name package_name #创建名为env_name的新环境，并在该环境下安装名为package_name 的包，可以指定新环境的版本号，例如：conda create -n python2 python=python2.7 numpy pandas，创建了python2环境，python版本为2.7，同时还安装了numpy pandas包</span><br><span class=\"line\">6. source activate env_name #切换至env_name环境</span><br><span class=\"line\">7. source deactivate #退出环境</span><br><span class=\"line\">8. conda info -e #显示所有已经创建的环境</span><br><span class=\"line\">9. conda create --name new_env_name --clone old_env_name #复制old_env_name为new_env_name</span><br><span class=\"line\">10. conda remove --name env_name –all #删除环境</span><br><span class=\"line\">11. conda list #查看所有已经安装的包</span><br><span class=\"line\">12. conda install package_name #在当前环境中安装包</span><br><span class=\"line\">13. conda install --name env_name package_name #在指定环境中安装包</span><br><span class=\"line\">14. conda remove -- name env_name package #删除指定环境中的包</span><br><span class=\"line\">15. conda remove package #删除当前环境中的包</span><br><span class=\"line\">16. conda env remove -n env_name #采用第10条的方法删除环境失败时，可采用这种方法</span><br></pre></td></tr></table></figure>\n\n\n\n<p>两个环境，一个有request一个没有，隔离作用</p>\n<h1 id=\"镜像源\"><a href=\"#镜像源\" class=\"headerlink\" title=\"镜像源\"></a>镜像源</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看镜像源</span></span><br><span class=\"line\">conda config --show-sources</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加镜像源</span></span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从镜像源中安装包时显示来源</span></span><br><span class=\"line\">conda config --set show_channel_urls yes</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除镜像源</span></span><br><span class=\"line\">conda config --remove channels https://XXX</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除配置的镜像源，使用默认镜像源</span></span><br><span class=\"line\">conda config --remove-key channels</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"打包运行环境\"><a href=\"#打包运行环境\" class=\"headerlink\" title=\"打包运行环境\"></a>打包运行环境</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install conda-pack</span><br><span class=\"line\">conda pack -n my_env_name -o out_name.tar.gz</span><br><span class=\"line\">tar -zxvf 2.7.tar.gz -C 2.7</span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">source activate my_env_name</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<blockquote>\n<p>conda是一个包和环境管理工具，用于创建、管理和切换Python的虚拟环境</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p ~/miniconda3</span><br><span class=\"line\">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh</span><br><span class=\"line\">bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3</span><br><span class=\"line\">rm ~/miniconda3/miniconda.sh</span><br><span class=\"line\">source ~/miniconda3/bin/activate</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. conda --version #查看conda版本，验证是否安装</span><br><span class=\"line\">2. conda update conda #更新至最新版本，也会更新其它相关包</span><br><span class=\"line\">3. conda update --all #更新所有包</span><br><span class=\"line\">4. conda update package_name #更新指定的包</span><br><span class=\"line\">5. conda create -n env_name package_name #创建名为env_name的新环境，并在该环境下安装名为package_name 的包，可以指定新环境的版本号，例如：conda create -n python2 python=python2.7 numpy pandas，创建了python2环境，python版本为2.7，同时还安装了numpy pandas包</span><br><span class=\"line\">6. source activate env_name #切换至env_name环境</span><br><span class=\"line\">7. source deactivate #退出环境</span><br><span class=\"line\">8. conda info -e #显示所有已经创建的环境</span><br><span class=\"line\">9. conda create --name new_env_name --clone old_env_name #复制old_env_name为new_env_name</span><br><span class=\"line\">10. conda remove --name env_name –all #删除环境</span><br><span class=\"line\">11. conda list #查看所有已经安装的包</span><br><span class=\"line\">12. conda install package_name #在当前环境中安装包</span><br><span class=\"line\">13. conda install --name env_name package_name #在指定环境中安装包</span><br><span class=\"line\">14. conda remove -- name env_name package #删除指定环境中的包</span><br><span class=\"line\">15. conda remove package #删除当前环境中的包</span><br><span class=\"line\">16. conda env remove -n env_name #采用第10条的方法删除环境失败时，可采用这种方法</span><br></pre></td></tr></table></figure>\n\n\n\n<p>两个环境，一个有request一个没有，隔离作用</p>\n<h1 id=\"镜像源\"><a href=\"#镜像源\" class=\"headerlink\" title=\"镜像源\"></a>镜像源</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看镜像源</span></span><br><span class=\"line\">conda config --show-sources</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加镜像源</span></span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从镜像源中安装包时显示来源</span></span><br><span class=\"line\">conda config --set show_channel_urls yes</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除镜像源</span></span><br><span class=\"line\">conda config --remove channels https://XXX</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除配置的镜像源，使用默认镜像源</span></span><br><span class=\"line\">conda config --remove-key channels</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"打包运行环境\"><a href=\"#打包运行环境\" class=\"headerlink\" title=\"打包运行环境\"></a>打包运行环境</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install conda-pack</span><br><span class=\"line\">conda pack -n my_env_name -o out_name.tar.gz</span><br><span class=\"line\">tar -zxvf 2.7.tar.gz -C 2.7</span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">source activate my_env_name</span><br></pre></td></tr></table></figure>\n\n"},{"title":"openvpn","date":"2025-04-21T13:11:04.000Z","_content":"# 安装\n```shell\ngit clone https://github.com/likaiyuan00/openvpn-install.git\ncd openvpn-install && bash openvpn-install.sh\n#systemctl start openvpn@client.service 启动的账号密码  auth-user-pass 控制客户端密码验证\necho \"test test@123\" >  /etc/openvpn/userfile.sh\n```\n\n# 配置文件字段解读\n## server端\n```config\n在#openvpn服务端的监听地址\nlocal 0.0.0.0\n#openvpn服务端的监听端口（默认1194）\nport 1115\n#使用的协议，tcp/udp\nproto tcp\n#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），一般使用tun\ndev tun\n#ca证书、服务端证书、服务端秘钥和秘钥交换文件\nca /etc/openvpn/server/ca.crt\ncert /etc/openvpn/server/server.crt\nkey /etc/openvpn/server/server.key\ndh /etc/openvpn/server/dh.pem\n#vpn服务端为自己和客户端分配的ip地址池。\n#服务端自己获取网段的第一个地址（此处是10.8.0.1），后为客户端分配其他的可用地址。以后客户端就可以和10.8.0.1进行通信。\n注意：以下网段地址不要和已有网段冲突或重复\nserver 10.8.0.0  255.255.255.0\n#使用一个文件记录已分配虚拟ip的客户端和虚拟ip的对应关系。以后openvpn重启时，将可以按照此文件继续为对应的客户端分配此前相同的ip（自动续借ip）\nifconfig-pool-persist ipp.txt\n#使用tap模式的时候考虑此选项\nserver-bridge XXXXXX\n#vpn服务端向客户端推送vpn服务端内网网段的路由配置，以便让客户端能够找到服务端的内网。多条路由写多个push指令\npush \"route 10.0.10.0  255.255.255.0\"\npush \"route 192.168.10.0 255.255.255.0\"  #允许客户端访问的内网网段\n#让vpn客户端之间可以通信。默认情况客户端只能服务端进行通信\n#默认此项是注释的，客户端之间不能相互通信\nclient-to-client\n#允许多个客户端使用同一个vpn账号连接服务端\n#默认是注释的，不支持多个客户端登录一个账号\nduplicate-cn\n#每10秒ping一次，120秒后没收到ping就说明对方挂了\nkeepalive 10 120\n#加强认证方式，防攻击。如果配置文件中启用此项（默认是启用的），需要执行openvpn --genkey --secret ta.key，并把ta.key放到/etc/openvpn/server/目录，服务端第二个参数为0；同时客户端也要有此文件，且client.conf中此指令的第二个参数需要为1\ntls-auth /etc/openvpn/server/ta.key 0\n#选择一个密码。如果在服务器上使用了cipher选项，那么也必须在这里指定它。注意，v2.4客户端/服务端将在tls模式下自动协商AES-256-GCM\ncipher AES-256-CBC\n#openvpn 2.4版本的vpn才能设置此选项。表示服务端启用lz4的压缩功能 ，传输数据给客户端时会压缩数据包。\nPush后在客户端也配置启用lz4的压缩功能，向服务端发数据时也会压缩。如果是2.4版本以下的老版本，则使用用comp-lzo指令\ncompress lz4-v2\npush \"compress lz4-v2\"\n#启用lzo数据压缩格式，此指令用于低于2.4版本的老版本，且如果服务端配置了该指令，客户端也必须要配置\ncomp-lzo\n#并发客户端的连接数\nmax-clients 1000\n#通过ping得知超时时，当重启vpn后将使用同一个秘钥文件以及保持tun连接状态\npersist-key\npersist-tun\n#在文件中输出当前的连接信息，每分钟截断并重写一次该文件\nstatus openvpn-status.log\n#log指令表示每次启动vpn时覆盖式记录到指定日志文件中\n#log-append则表示每次启动vpn时追加式的记录到指定日志中\n#但两者只能选其一，或者不选时记录到rsyslog中\nlog  /var/log/openvpn.log\nlog-append  /var/log/openvpn.log\n#日志记录的详细级别\nverb 3\n#当服务器重新启动时，通知客户端，以便它可以自动重新连接。仅在UDP协议是可用\nexplicit-exit-notify 1\n#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志\nmute 20\n```\n## client\n```\n#标识这是个客户端\nclient\n#使用的协议，tcp/udp，服务端是什么客户端就是什么\nproto tcp\n#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），服务端是什么客户端就是什么\ndev tun\n#服务端的地址和端口\nremote 10.0.0.190 1194\n#一直尝试解析OpenVPN服务器的主机名\nresolv-retry infinite\n#大多数客户机不需要绑定到特定的本地端口号\nnobind\n#初始化后的降级特权(仅非windows)\nuser nobody\ngroup nobody\n#尝试在重新启动时保留某些状态\npersist-key\npersist-tun\n#ca证书、客户端证书、客户端密钥\n#如果它们和client.conf或client.ovpn在同一个目录下则可以不写绝对路径，否则需要写绝对路径调用\nca ca.crt\ncert client.crt\nkey client.key\n#通过检查certicate是否具有正确的密钥使用设置来验证服务器证书。\nremote-cert-tls server\n#加强认证方式，防攻击。服务端有配置，则客户端必须有\ntls-auth ta.key 1\n#选择一个密码。如果在服务器上使用了cipher选项，那么您也必须在这里指定它。注意，v2.4客户端/服务器将在TLS模式下自动协商AES-256-GCM。\ncipher AES-256-CBC\n# 服务端用的什么，客户端就用的什么\n#表示客户端启用lz4的压缩功能，传输数据给客户端时会压缩数据包\ncomp-lzo\n# 日志级别\nverb 3\n#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志\nmute 20\n```\n\n# 如何直连openvpn服务端其他局域网服务器\n> 客户端（10.8.0.10） <br>\nping (服务端)172.16.1.7 正常 <br>\nping (服务端其他内网机器)172.16.1.8失败\n>>1. 第一种方法 配置路由\nroute add -net 10.8.0.0 netmask 255.255.255.0 gw 172.16.1.7<br>\n10.8.0.0  客户端IP<br>\n172.16.1.7 openvpn 服务端IP\n***\n>>2. 第二种方法使用snat转发 <br>\niptables -t nat -A POSTROUTING -d 10.8.0.0/24 -o eth0 -j MASQUERADE<br>\niptables -A FORWARD -s 10.8.0.0 -j ACCEPT\n\n\n# 额外\n服务端\nroute 192.168.0.0 255.255.0.0   指令作用是在服务端加一条路由，网关是客户端ip\n![alt text](image.png)\n\n服务端只能ping通客户端的tun0的ip，内网ip不行，即使加了路由也不行\n![alt text](image-1.png)\n\n客户端\npush \"route 192.168.10.0 255.255.255.0\"作用是在客户端多加一条路由。网关是服务端的tun0IP（也就是server 指令配置分配的地址池）\n![alt text](image-2.png)\n![alt text](image-3.png)\n\n","source":"_posts/openvpn.md","raw":"---\ntitle: openvpn\ndate: 2025-04-21 21:11:04\ntags:\ncategories: linux\n---\n# 安装\n```shell\ngit clone https://github.com/likaiyuan00/openvpn-install.git\ncd openvpn-install && bash openvpn-install.sh\n#systemctl start openvpn@client.service 启动的账号密码  auth-user-pass 控制客户端密码验证\necho \"test test@123\" >  /etc/openvpn/userfile.sh\n```\n\n# 配置文件字段解读\n## server端\n```config\n在#openvpn服务端的监听地址\nlocal 0.0.0.0\n#openvpn服务端的监听端口（默认1194）\nport 1115\n#使用的协议，tcp/udp\nproto tcp\n#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），一般使用tun\ndev tun\n#ca证书、服务端证书、服务端秘钥和秘钥交换文件\nca /etc/openvpn/server/ca.crt\ncert /etc/openvpn/server/server.crt\nkey /etc/openvpn/server/server.key\ndh /etc/openvpn/server/dh.pem\n#vpn服务端为自己和客户端分配的ip地址池。\n#服务端自己获取网段的第一个地址（此处是10.8.0.1），后为客户端分配其他的可用地址。以后客户端就可以和10.8.0.1进行通信。\n注意：以下网段地址不要和已有网段冲突或重复\nserver 10.8.0.0  255.255.255.0\n#使用一个文件记录已分配虚拟ip的客户端和虚拟ip的对应关系。以后openvpn重启时，将可以按照此文件继续为对应的客户端分配此前相同的ip（自动续借ip）\nifconfig-pool-persist ipp.txt\n#使用tap模式的时候考虑此选项\nserver-bridge XXXXXX\n#vpn服务端向客户端推送vpn服务端内网网段的路由配置，以便让客户端能够找到服务端的内网。多条路由写多个push指令\npush \"route 10.0.10.0  255.255.255.0\"\npush \"route 192.168.10.0 255.255.255.0\"  #允许客户端访问的内网网段\n#让vpn客户端之间可以通信。默认情况客户端只能服务端进行通信\n#默认此项是注释的，客户端之间不能相互通信\nclient-to-client\n#允许多个客户端使用同一个vpn账号连接服务端\n#默认是注释的，不支持多个客户端登录一个账号\nduplicate-cn\n#每10秒ping一次，120秒后没收到ping就说明对方挂了\nkeepalive 10 120\n#加强认证方式，防攻击。如果配置文件中启用此项（默认是启用的），需要执行openvpn --genkey --secret ta.key，并把ta.key放到/etc/openvpn/server/目录，服务端第二个参数为0；同时客户端也要有此文件，且client.conf中此指令的第二个参数需要为1\ntls-auth /etc/openvpn/server/ta.key 0\n#选择一个密码。如果在服务器上使用了cipher选项，那么也必须在这里指定它。注意，v2.4客户端/服务端将在tls模式下自动协商AES-256-GCM\ncipher AES-256-CBC\n#openvpn 2.4版本的vpn才能设置此选项。表示服务端启用lz4的压缩功能 ，传输数据给客户端时会压缩数据包。\nPush后在客户端也配置启用lz4的压缩功能，向服务端发数据时也会压缩。如果是2.4版本以下的老版本，则使用用comp-lzo指令\ncompress lz4-v2\npush \"compress lz4-v2\"\n#启用lzo数据压缩格式，此指令用于低于2.4版本的老版本，且如果服务端配置了该指令，客户端也必须要配置\ncomp-lzo\n#并发客户端的连接数\nmax-clients 1000\n#通过ping得知超时时，当重启vpn后将使用同一个秘钥文件以及保持tun连接状态\npersist-key\npersist-tun\n#在文件中输出当前的连接信息，每分钟截断并重写一次该文件\nstatus openvpn-status.log\n#log指令表示每次启动vpn时覆盖式记录到指定日志文件中\n#log-append则表示每次启动vpn时追加式的记录到指定日志中\n#但两者只能选其一，或者不选时记录到rsyslog中\nlog  /var/log/openvpn.log\nlog-append  /var/log/openvpn.log\n#日志记录的详细级别\nverb 3\n#当服务器重新启动时，通知客户端，以便它可以自动重新连接。仅在UDP协议是可用\nexplicit-exit-notify 1\n#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志\nmute 20\n```\n## client\n```\n#标识这是个客户端\nclient\n#使用的协议，tcp/udp，服务端是什么客户端就是什么\nproto tcp\n#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），服务端是什么客户端就是什么\ndev tun\n#服务端的地址和端口\nremote 10.0.0.190 1194\n#一直尝试解析OpenVPN服务器的主机名\nresolv-retry infinite\n#大多数客户机不需要绑定到特定的本地端口号\nnobind\n#初始化后的降级特权(仅非windows)\nuser nobody\ngroup nobody\n#尝试在重新启动时保留某些状态\npersist-key\npersist-tun\n#ca证书、客户端证书、客户端密钥\n#如果它们和client.conf或client.ovpn在同一个目录下则可以不写绝对路径，否则需要写绝对路径调用\nca ca.crt\ncert client.crt\nkey client.key\n#通过检查certicate是否具有正确的密钥使用设置来验证服务器证书。\nremote-cert-tls server\n#加强认证方式，防攻击。服务端有配置，则客户端必须有\ntls-auth ta.key 1\n#选择一个密码。如果在服务器上使用了cipher选项，那么您也必须在这里指定它。注意，v2.4客户端/服务器将在TLS模式下自动协商AES-256-GCM。\ncipher AES-256-CBC\n# 服务端用的什么，客户端就用的什么\n#表示客户端启用lz4的压缩功能，传输数据给客户端时会压缩数据包\ncomp-lzo\n# 日志级别\nverb 3\n#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志\nmute 20\n```\n\n# 如何直连openvpn服务端其他局域网服务器\n> 客户端（10.8.0.10） <br>\nping (服务端)172.16.1.7 正常 <br>\nping (服务端其他内网机器)172.16.1.8失败\n>>1. 第一种方法 配置路由\nroute add -net 10.8.0.0 netmask 255.255.255.0 gw 172.16.1.7<br>\n10.8.0.0  客户端IP<br>\n172.16.1.7 openvpn 服务端IP\n***\n>>2. 第二种方法使用snat转发 <br>\niptables -t nat -A POSTROUTING -d 10.8.0.0/24 -o eth0 -j MASQUERADE<br>\niptables -A FORWARD -s 10.8.0.0 -j ACCEPT\n\n\n# 额外\n服务端\nroute 192.168.0.0 255.255.0.0   指令作用是在服务端加一条路由，网关是客户端ip\n![alt text](image.png)\n\n服务端只能ping通客户端的tun0的ip，内网ip不行，即使加了路由也不行\n![alt text](image-1.png)\n\n客户端\npush \"route 192.168.10.0 255.255.255.0\"作用是在客户端多加一条路由。网关是服务端的tun0IP（也就是server 指令配置分配的地址池）\n![alt text](image-2.png)\n![alt text](image-3.png)\n\n","slug":"openvpn","published":1,"updated":"2025-04-23T12:37:33.344Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwg000aqmm4h0ev2mkm","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/likaiyuan00/openvpn-install.git</span><br><span class=\"line\">cd openvpn-install &amp;&amp; bash openvpn-install.sh</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">systemctl start openvpn@client.service 启动的账号密码  auth-user-pass 控制客户端密码验证</span></span><br><span class=\"line\">echo &quot;test test@123&quot; &gt;  /etc/openvpn/userfile.sh</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置文件字段解读\"><a href=\"#配置文件字段解读\" class=\"headerlink\" title=\"配置文件字段解读\"></a>配置文件字段解读</h1><h2 id=\"server端\"><a href=\"#server端\" class=\"headerlink\" title=\"server端\"></a>server端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在#openvpn服务端的监听地址</span><br><span class=\"line\">local 0.0.0.0</span><br><span class=\"line\">#openvpn服务端的监听端口（默认1194）</span><br><span class=\"line\">port 1115</span><br><span class=\"line\">#使用的协议，tcp/udp</span><br><span class=\"line\">proto tcp</span><br><span class=\"line\">#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），一般使用tun</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">#ca证书、服务端证书、服务端秘钥和秘钥交换文件</span><br><span class=\"line\">ca /etc/openvpn/server/ca.crt</span><br><span class=\"line\">cert /etc/openvpn/server/server.crt</span><br><span class=\"line\">key /etc/openvpn/server/server.key</span><br><span class=\"line\">dh /etc/openvpn/server/dh.pem</span><br><span class=\"line\">#vpn服务端为自己和客户端分配的ip地址池。</span><br><span class=\"line\">#服务端自己获取网段的第一个地址（此处是10.8.0.1），后为客户端分配其他的可用地址。以后客户端就可以和10.8.0.1进行通信。</span><br><span class=\"line\">注意：以下网段地址不要和已有网段冲突或重复</span><br><span class=\"line\">server 10.8.0.0  255.255.255.0</span><br><span class=\"line\">#使用一个文件记录已分配虚拟ip的客户端和虚拟ip的对应关系。以后openvpn重启时，将可以按照此文件继续为对应的客户端分配此前相同的ip（自动续借ip）</span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\">#使用tap模式的时候考虑此选项</span><br><span class=\"line\">server-bridge XXXXXX</span><br><span class=\"line\">#vpn服务端向客户端推送vpn服务端内网网段的路由配置，以便让客户端能够找到服务端的内网。多条路由写多个push指令</span><br><span class=\"line\">push &quot;route 10.0.10.0  255.255.255.0&quot;</span><br><span class=\"line\">push &quot;route 192.168.10.0 255.255.255.0&quot;  #允许客户端访问的内网网段</span><br><span class=\"line\">#让vpn客户端之间可以通信。默认情况客户端只能服务端进行通信</span><br><span class=\"line\">#默认此项是注释的，客户端之间不能相互通信</span><br><span class=\"line\">client-to-client</span><br><span class=\"line\">#允许多个客户端使用同一个vpn账号连接服务端</span><br><span class=\"line\">#默认是注释的，不支持多个客户端登录一个账号</span><br><span class=\"line\">duplicate-cn</span><br><span class=\"line\">#每10秒ping一次，120秒后没收到ping就说明对方挂了</span><br><span class=\"line\">keepalive 10 120</span><br><span class=\"line\">#加强认证方式，防攻击。如果配置文件中启用此项（默认是启用的），需要执行openvpn --genkey --secret ta.key，并把ta.key放到/etc/openvpn/server/目录，服务端第二个参数为0；同时客户端也要有此文件，且client.conf中此指令的第二个参数需要为1</span><br><span class=\"line\">tls-auth /etc/openvpn/server/ta.key 0</span><br><span class=\"line\">#选择一个密码。如果在服务器上使用了cipher选项，那么也必须在这里指定它。注意，v2.4客户端/服务端将在tls模式下自动协商AES-256-GCM</span><br><span class=\"line\">cipher AES-256-CBC</span><br><span class=\"line\">#openvpn 2.4版本的vpn才能设置此选项。表示服务端启用lz4的压缩功能 ，传输数据给客户端时会压缩数据包。</span><br><span class=\"line\">Push后在客户端也配置启用lz4的压缩功能，向服务端发数据时也会压缩。如果是2.4版本以下的老版本，则使用用comp-lzo指令</span><br><span class=\"line\">compress lz4-v2</span><br><span class=\"line\">push &quot;compress lz4-v2&quot;</span><br><span class=\"line\">#启用lzo数据压缩格式，此指令用于低于2.4版本的老版本，且如果服务端配置了该指令，客户端也必须要配置</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">#并发客户端的连接数</span><br><span class=\"line\">max-clients 1000</span><br><span class=\"line\">#通过ping得知超时时，当重启vpn后将使用同一个秘钥文件以及保持tun连接状态</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">#在文件中输出当前的连接信息，每分钟截断并重写一次该文件</span><br><span class=\"line\">status openvpn-status.log</span><br><span class=\"line\">#log指令表示每次启动vpn时覆盖式记录到指定日志文件中</span><br><span class=\"line\">#log-append则表示每次启动vpn时追加式的记录到指定日志中</span><br><span class=\"line\">#但两者只能选其一，或者不选时记录到rsyslog中</span><br><span class=\"line\">log  /var/log/openvpn.log</span><br><span class=\"line\">log-append  /var/log/openvpn.log</span><br><span class=\"line\">#日志记录的详细级别</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">#当服务器重新启动时，通知客户端，以便它可以自动重新连接。仅在UDP协议是可用</span><br><span class=\"line\">explicit-exit-notify 1</span><br><span class=\"line\">#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志</span><br><span class=\"line\">mute 20</span><br></pre></td></tr></table></figure>\n<h2 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#标识这是个客户端</span><br><span class=\"line\">client</span><br><span class=\"line\">#使用的协议，tcp/udp，服务端是什么客户端就是什么</span><br><span class=\"line\">proto tcp</span><br><span class=\"line\">#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），服务端是什么客户端就是什么</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">#服务端的地址和端口</span><br><span class=\"line\">remote 10.0.0.190 1194</span><br><span class=\"line\">#一直尝试解析OpenVPN服务器的主机名</span><br><span class=\"line\">resolv-retry infinite</span><br><span class=\"line\">#大多数客户机不需要绑定到特定的本地端口号</span><br><span class=\"line\">nobind</span><br><span class=\"line\">#初始化后的降级特权(仅非windows)</span><br><span class=\"line\">user nobody</span><br><span class=\"line\">group nobody</span><br><span class=\"line\">#尝试在重新启动时保留某些状态</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">#ca证书、客户端证书、客户端密钥</span><br><span class=\"line\">#如果它们和client.conf或client.ovpn在同一个目录下则可以不写绝对路径，否则需要写绝对路径调用</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">cert client.crt</span><br><span class=\"line\">key client.key</span><br><span class=\"line\">#通过检查certicate是否具有正确的密钥使用设置来验证服务器证书。</span><br><span class=\"line\">remote-cert-tls server</span><br><span class=\"line\">#加强认证方式，防攻击。服务端有配置，则客户端必须有</span><br><span class=\"line\">tls-auth ta.key 1</span><br><span class=\"line\">#选择一个密码。如果在服务器上使用了cipher选项，那么您也必须在这里指定它。注意，v2.4客户端/服务器将在TLS模式下自动协商AES-256-GCM。</span><br><span class=\"line\">cipher AES-256-CBC</span><br><span class=\"line\"># 服务端用的什么，客户端就用的什么</span><br><span class=\"line\">#表示客户端启用lz4的压缩功能，传输数据给客户端时会压缩数据包</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\"># 日志级别</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志</span><br><span class=\"line\">mute 20</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"如何直连openvpn服务端其他局域网服务器\"><a href=\"#如何直连openvpn服务端其他局域网服务器\" class=\"headerlink\" title=\"如何直连openvpn服务端其他局域网服务器\"></a>如何直连openvpn服务端其他局域网服务器</h1><blockquote>\n<p>客户端（10.8.0.10） <br><br>ping (服务端)172.16.1.7 正常 <br><br>ping (服务端其他内网机器)172.16.1.8失败</p>\n<blockquote>\n<ol>\n<li>第一种方法 配置路由<br>route add -net 10.8.0.0 netmask 255.255.255.0 gw 172.16.1.7<br><br>10.8.0.0  客户端IP<br><br>172.16.1.7 openvpn 服务端IP</li>\n</ol>\n</blockquote>\n</blockquote>\n<hr>\n<blockquote>\n<blockquote>\n<ol start=\"2\">\n<li>第二种方法使用snat转发 <br><br>iptables -t nat -A POSTROUTING -d 10.8.0.0&#x2F;24 -o eth0 -j MASQUERADE<br><br>iptables -A FORWARD -s 10.8.0.0 -j ACCEPT</li>\n</ol>\n</blockquote>\n</blockquote>\n<h1 id=\"额外\"><a href=\"#额外\" class=\"headerlink\" title=\"额外\"></a>额外</h1><p>服务端<br>route 192.168.0.0 255.255.0.0   指令作用是在服务端加一条路由，网关是客户端ip<br><img src=\"/2025/04/21/openvpn/image.png\" alt=\"alt text\"></p>\n<p>服务端只能ping通客户端的tun0的ip，内网ip不行，即使加了路由也不行<br><img src=\"/2025/04/21/openvpn/image-1.png\" alt=\"alt text\"></p>\n<p>客户端<br>push “route 192.168.10.0 255.255.255.0”作用是在客户端多加一条路由。网关是服务端的tun0IP（也就是server 指令配置分配的地址池）<br><img src=\"/2025/04/21/openvpn/image-2.png\" alt=\"alt text\"><br><img src=\"/2025/04/21/openvpn/image-3.png\" alt=\"alt text\"></p>\n","excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/likaiyuan00/openvpn-install.git</span><br><span class=\"line\">cd openvpn-install &amp;&amp; bash openvpn-install.sh</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">systemctl start openvpn@client.service 启动的账号密码  auth-user-pass 控制客户端密码验证</span></span><br><span class=\"line\">echo &quot;test test@123&quot; &gt;  /etc/openvpn/userfile.sh</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置文件字段解读\"><a href=\"#配置文件字段解读\" class=\"headerlink\" title=\"配置文件字段解读\"></a>配置文件字段解读</h1><h2 id=\"server端\"><a href=\"#server端\" class=\"headerlink\" title=\"server端\"></a>server端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在#openvpn服务端的监听地址</span><br><span class=\"line\">local 0.0.0.0</span><br><span class=\"line\">#openvpn服务端的监听端口（默认1194）</span><br><span class=\"line\">port 1115</span><br><span class=\"line\">#使用的协议，tcp/udp</span><br><span class=\"line\">proto tcp</span><br><span class=\"line\">#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），一般使用tun</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">#ca证书、服务端证书、服务端秘钥和秘钥交换文件</span><br><span class=\"line\">ca /etc/openvpn/server/ca.crt</span><br><span class=\"line\">cert /etc/openvpn/server/server.crt</span><br><span class=\"line\">key /etc/openvpn/server/server.key</span><br><span class=\"line\">dh /etc/openvpn/server/dh.pem</span><br><span class=\"line\">#vpn服务端为自己和客户端分配的ip地址池。</span><br><span class=\"line\">#服务端自己获取网段的第一个地址（此处是10.8.0.1），后为客户端分配其他的可用地址。以后客户端就可以和10.8.0.1进行通信。</span><br><span class=\"line\">注意：以下网段地址不要和已有网段冲突或重复</span><br><span class=\"line\">server 10.8.0.0  255.255.255.0</span><br><span class=\"line\">#使用一个文件记录已分配虚拟ip的客户端和虚拟ip的对应关系。以后openvpn重启时，将可以按照此文件继续为对应的客户端分配此前相同的ip（自动续借ip）</span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\">#使用tap模式的时候考虑此选项</span><br><span class=\"line\">server-bridge XXXXXX</span><br><span class=\"line\">#vpn服务端向客户端推送vpn服务端内网网段的路由配置，以便让客户端能够找到服务端的内网。多条路由写多个push指令</span><br><span class=\"line\">push &quot;route 10.0.10.0  255.255.255.0&quot;</span><br><span class=\"line\">push &quot;route 192.168.10.0 255.255.255.0&quot;  #允许客户端访问的内网网段</span><br><span class=\"line\">#让vpn客户端之间可以通信。默认情况客户端只能服务端进行通信</span><br><span class=\"line\">#默认此项是注释的，客户端之间不能相互通信</span><br><span class=\"line\">client-to-client</span><br><span class=\"line\">#允许多个客户端使用同一个vpn账号连接服务端</span><br><span class=\"line\">#默认是注释的，不支持多个客户端登录一个账号</span><br><span class=\"line\">duplicate-cn</span><br><span class=\"line\">#每10秒ping一次，120秒后没收到ping就说明对方挂了</span><br><span class=\"line\">keepalive 10 120</span><br><span class=\"line\">#加强认证方式，防攻击。如果配置文件中启用此项（默认是启用的），需要执行openvpn --genkey --secret ta.key，并把ta.key放到/etc/openvpn/server/目录，服务端第二个参数为0；同时客户端也要有此文件，且client.conf中此指令的第二个参数需要为1</span><br><span class=\"line\">tls-auth /etc/openvpn/server/ta.key 0</span><br><span class=\"line\">#选择一个密码。如果在服务器上使用了cipher选项，那么也必须在这里指定它。注意，v2.4客户端/服务端将在tls模式下自动协商AES-256-GCM</span><br><span class=\"line\">cipher AES-256-CBC</span><br><span class=\"line\">#openvpn 2.4版本的vpn才能设置此选项。表示服务端启用lz4的压缩功能 ，传输数据给客户端时会压缩数据包。</span><br><span class=\"line\">Push后在客户端也配置启用lz4的压缩功能，向服务端发数据时也会压缩。如果是2.4版本以下的老版本，则使用用comp-lzo指令</span><br><span class=\"line\">compress lz4-v2</span><br><span class=\"line\">push &quot;compress lz4-v2&quot;</span><br><span class=\"line\">#启用lzo数据压缩格式，此指令用于低于2.4版本的老版本，且如果服务端配置了该指令，客户端也必须要配置</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">#并发客户端的连接数</span><br><span class=\"line\">max-clients 1000</span><br><span class=\"line\">#通过ping得知超时时，当重启vpn后将使用同一个秘钥文件以及保持tun连接状态</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">#在文件中输出当前的连接信息，每分钟截断并重写一次该文件</span><br><span class=\"line\">status openvpn-status.log</span><br><span class=\"line\">#log指令表示每次启动vpn时覆盖式记录到指定日志文件中</span><br><span class=\"line\">#log-append则表示每次启动vpn时追加式的记录到指定日志中</span><br><span class=\"line\">#但两者只能选其一，或者不选时记录到rsyslog中</span><br><span class=\"line\">log  /var/log/openvpn.log</span><br><span class=\"line\">log-append  /var/log/openvpn.log</span><br><span class=\"line\">#日志记录的详细级别</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">#当服务器重新启动时，通知客户端，以便它可以自动重新连接。仅在UDP协议是可用</span><br><span class=\"line\">explicit-exit-notify 1</span><br><span class=\"line\">#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志</span><br><span class=\"line\">mute 20</span><br></pre></td></tr></table></figure>\n<h2 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#标识这是个客户端</span><br><span class=\"line\">client</span><br><span class=\"line\">#使用的协议，tcp/udp，服务端是什么客户端就是什么</span><br><span class=\"line\">proto tcp</span><br><span class=\"line\">#使用三层路由ip隧道（tun），还是二层以太网隧道（tap），服务端是什么客户端就是什么</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">#服务端的地址和端口</span><br><span class=\"line\">remote 10.0.0.190 1194</span><br><span class=\"line\">#一直尝试解析OpenVPN服务器的主机名</span><br><span class=\"line\">resolv-retry infinite</span><br><span class=\"line\">#大多数客户机不需要绑定到特定的本地端口号</span><br><span class=\"line\">nobind</span><br><span class=\"line\">#初始化后的降级特权(仅非windows)</span><br><span class=\"line\">user nobody</span><br><span class=\"line\">group nobody</span><br><span class=\"line\">#尝试在重新启动时保留某些状态</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">#ca证书、客户端证书、客户端密钥</span><br><span class=\"line\">#如果它们和client.conf或client.ovpn在同一个目录下则可以不写绝对路径，否则需要写绝对路径调用</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">cert client.crt</span><br><span class=\"line\">key client.key</span><br><span class=\"line\">#通过检查certicate是否具有正确的密钥使用设置来验证服务器证书。</span><br><span class=\"line\">remote-cert-tls server</span><br><span class=\"line\">#加强认证方式，防攻击。服务端有配置，则客户端必须有</span><br><span class=\"line\">tls-auth ta.key 1</span><br><span class=\"line\">#选择一个密码。如果在服务器上使用了cipher选项，那么您也必须在这里指定它。注意，v2.4客户端/服务器将在TLS模式下自动协商AES-256-GCM。</span><br><span class=\"line\">cipher AES-256-CBC</span><br><span class=\"line\"># 服务端用的什么，客户端就用的什么</span><br><span class=\"line\">#表示客户端启用lz4的压缩功能，传输数据给客户端时会压缩数据包</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\"># 日志级别</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">#沉默的重复信息。最多20条相同消息类别的连续消息将输出到日志</span><br><span class=\"line\">mute 20</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"如何直连openvpn服务端其他局域网服务器\"><a href=\"#如何直连openvpn服务端其他局域网服务器\" class=\"headerlink\" title=\"如何直连openvpn服务端其他局域网服务器\"></a>如何直连openvpn服务端其他局域网服务器</h1><blockquote>\n<p>客户端（10.8.0.10） <br><br>ping (服务端)172.16.1.7 正常 <br><br>ping (服务端其他内网机器)172.16.1.8失败</p>\n<blockquote>\n<ol>\n<li>第一种方法 配置路由<br>route add -net 10.8.0.0 netmask 255.255.255.0 gw 172.16.1.7<br><br>10.8.0.0  客户端IP<br><br>172.16.1.7 openvpn 服务端IP</li>\n</ol>\n</blockquote>\n</blockquote>\n<hr>\n<blockquote>\n<blockquote>\n<ol start=\"2\">\n<li>第二种方法使用snat转发 <br><br>iptables -t nat -A POSTROUTING -d 10.8.0.0&#x2F;24 -o eth0 -j MASQUERADE<br><br>iptables -A FORWARD -s 10.8.0.0 -j ACCEPT</li>\n</ol>\n</blockquote>\n</blockquote>\n<h1 id=\"额外\"><a href=\"#额外\" class=\"headerlink\" title=\"额外\"></a>额外</h1><p>服务端<br>route 192.168.0.0 255.255.0.0   指令作用是在服务端加一条路由，网关是客户端ip<br><img src=\"/2025/04/21/openvpn/image.png\" alt=\"alt text\"></p>\n<p>服务端只能ping通客户端的tun0的ip，内网ip不行，即使加了路由也不行<br><img src=\"/2025/04/21/openvpn/image-1.png\" alt=\"alt text\"></p>\n<p>客户端<br>push “route 192.168.10.0 255.255.255.0”作用是在客户端多加一条路由。网关是服务端的tun0IP（也就是server 指令配置分配的地址池）<br><img src=\"/2025/04/21/openvpn/image-2.png\" alt=\"alt text\"><br><img src=\"/2025/04/21/openvpn/image-3.png\" alt=\"alt text\"></p>\n"},{"title":"prometheus","date":"2025-04-18T01:56:59.000Z","_content":"https://github.com/likaiyuan00/k8s-prometheus.git\n\n# k8s-prometheus\n部署kubernetes_sd_configs\n配置文件只采集了\n> 1 prometheus*  prometheus-server<br> \n> 2 container*   kubelet 的10250端口  /metrics/cadvisor<br>\n> 3 node*    node_exporter<br>\n> 4 apiserver*  apiserver 6443 端口 /metrics<br>\n> 5 kube*  kube-state-metrics组件 8080端口 /metrics<br>\n> 6 coredns*  kubernetes-pods 自动发现 pod需要配置 prometheus.io/scrape: \"true\" 不然抓取不到 默认flase<br>\n> prometheus.io/path: \"/metrics\"   # 指标路径（默认 /metrics 可不写）<br>\n> 7 kubelet*  apiserver代理端点 /api/v1/nodes/\\<node-name\\>/proxy/metrics\n其他有需要的可以自行配置\n\n\n导入镜像，执行yml文件即可\n\n## prometheus效果图\n![alt text](image-2.png)\n\n\n## grafana效果图\n![alt text](image-3.png)\n![alt text](image-4.png)\n![alt text](image-5.png)\n\n\n\n\n## kubelet 组件\n kubelet 三个指标 /metrics/probes（探针） /metrics/cadvisor（pod） /metrics（node）\n\n对应apiserver的 /api/v1/nodes/${node-name}/proxy/${url};一般为了减少apiserver的负载不建议使用这种方式 **\n\n直接访问会报401没有权限\n![alt text](image-6.png)\n\n\n需要先获取token，上面文件执行完会有一个prometheus用户\n![alt text](image-7.png)\n\n\n\npod内token路径为 /var/run/secrets/kubernetes.io/serviceaccount/token\n\n通过token再去访问发现就正常了\n\n```\n/metrics\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics\n```\n![alt text](image-8.png)\n\n\n\n对应kubelet*开头\n![alt text](image-9.png)\n\n\n```\n/metrics/probes（探针）\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/probes\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics/probes\n```\n![alt text](image-10.png)\n\n```\n/metrics/cadvisor（pod）\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/cadvisor\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics/cadvisor\n```\n![alt text](image-11.png)\n\n\n\n\n对应container*开头，容器指标\n![alt text](image-12.png)\n\n\n## node_exporter  \n端口暴露到节点了就不需要token了\n![alt text](image-13.png)\n\n\nnode*开头，节点指标\n![alt text](image-14.png)\n\n\n\n## kube-state-metrics\n集群应用状态监控比较重要的一个需要单独安装\n使用containerPort: 8080 暴露到节点了不需要token\n![alt text](image-15.png)\n\n\n\n\nkube*开头\n![alt text](image-16.png)\n\n\n## apiserver \n主要是监控apiserver的qps,查询成功率失败率等信息\n![alt text](image-17.png)\n\n\napiserver*开头\n![alt text](image-18.png)\n\n\n## kubernetes-pods 自动发现\n如果元数据内设置true，该pod才可以被抓取，默认false\n![alt text](image-19.png)\n\n\n\n以coredns为例\n![alt text](image-20.png)\n![alt text](image-21.png)\n\n\n\n\n\n以coredns*开头\n![alt text](image-22.png)\n\n\n这个自动发现还可以配置自身业务的监控，只有保证开启抓取，和符合prometheus抓取规范就可以，如果开启了prometheus.io/scrape 但是pod并没有提供数据指标的能力就会直接报错，如图404\n![alt text](image-23.png)\n\n\n比如现在我想加一个grafana的数据，只需要添加对应元数据就可以了\n![alt text](image-24.png)\n\n\nprometheus就自动发现了pod的ip\n![alt text](image-1.png)\n\n\ngrafana*开头\n![alt text](image.png)\n\n\n\n","source":"_posts/prometheus.md","raw":"---\ntitle: prometheus\ndate: 2025-04-18 09:56:59\ntags: prometheus\ncategories: prometheus\n---\nhttps://github.com/likaiyuan00/k8s-prometheus.git\n\n# k8s-prometheus\n部署kubernetes_sd_configs\n配置文件只采集了\n> 1 prometheus*  prometheus-server<br> \n> 2 container*   kubelet 的10250端口  /metrics/cadvisor<br>\n> 3 node*    node_exporter<br>\n> 4 apiserver*  apiserver 6443 端口 /metrics<br>\n> 5 kube*  kube-state-metrics组件 8080端口 /metrics<br>\n> 6 coredns*  kubernetes-pods 自动发现 pod需要配置 prometheus.io/scrape: \"true\" 不然抓取不到 默认flase<br>\n> prometheus.io/path: \"/metrics\"   # 指标路径（默认 /metrics 可不写）<br>\n> 7 kubelet*  apiserver代理端点 /api/v1/nodes/\\<node-name\\>/proxy/metrics\n其他有需要的可以自行配置\n\n\n导入镜像，执行yml文件即可\n\n## prometheus效果图\n![alt text](image-2.png)\n\n\n## grafana效果图\n![alt text](image-3.png)\n![alt text](image-4.png)\n![alt text](image-5.png)\n\n\n\n\n## kubelet 组件\n kubelet 三个指标 /metrics/probes（探针） /metrics/cadvisor（pod） /metrics（node）\n\n对应apiserver的 /api/v1/nodes/${node-name}/proxy/${url};一般为了减少apiserver的负载不建议使用这种方式 **\n\n直接访问会报401没有权限\n![alt text](image-6.png)\n\n\n需要先获取token，上面文件执行完会有一个prometheus用户\n![alt text](image-7.png)\n\n\n\npod内token路径为 /var/run/secrets/kubernetes.io/serviceaccount/token\n\n通过token再去访问发现就正常了\n\n```\n/metrics\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics\n```\n![alt text](image-8.png)\n\n\n\n对应kubelet*开头\n![alt text](image-9.png)\n\n\n```\n/metrics/probes（探针）\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/probes\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics/probes\n```\n![alt text](image-10.png)\n\n```\n/metrics/cadvisor（pod）\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/cadvisor\n\ncurl -k -sS  -H \"Authorization: Bearer $TOKEN\"  https://127.0.0.1:10250/metrics/cadvisor\n```\n![alt text](image-11.png)\n\n\n\n\n对应container*开头，容器指标\n![alt text](image-12.png)\n\n\n## node_exporter  \n端口暴露到节点了就不需要token了\n![alt text](image-13.png)\n\n\nnode*开头，节点指标\n![alt text](image-14.png)\n\n\n\n## kube-state-metrics\n集群应用状态监控比较重要的一个需要单独安装\n使用containerPort: 8080 暴露到节点了不需要token\n![alt text](image-15.png)\n\n\n\n\nkube*开头\n![alt text](image-16.png)\n\n\n## apiserver \n主要是监控apiserver的qps,查询成功率失败率等信息\n![alt text](image-17.png)\n\n\napiserver*开头\n![alt text](image-18.png)\n\n\n## kubernetes-pods 自动发现\n如果元数据内设置true，该pod才可以被抓取，默认false\n![alt text](image-19.png)\n\n\n\n以coredns为例\n![alt text](image-20.png)\n![alt text](image-21.png)\n\n\n\n\n\n以coredns*开头\n![alt text](image-22.png)\n\n\n这个自动发现还可以配置自身业务的监控，只有保证开启抓取，和符合prometheus抓取规范就可以，如果开启了prometheus.io/scrape 但是pod并没有提供数据指标的能力就会直接报错，如图404\n![alt text](image-23.png)\n\n\n比如现在我想加一个grafana的数据，只需要添加对应元数据就可以了\n![alt text](image-24.png)\n\n\nprometheus就自动发现了pod的ip\n![alt text](image-1.png)\n\n\ngrafana*开头\n![alt text](image.png)\n\n\n\n","slug":"prometheus","published":1,"updated":"2025-04-23T12:37:33.363Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwh000dqmm4djdb2r1s","content":"<p><a href=\"https://github.com/likaiyuan00/k8s-prometheus.git\">https://github.com/likaiyuan00/k8s-prometheus.git</a></p>\n<h1 id=\"k8s-prometheus\"><a href=\"#k8s-prometheus\" class=\"headerlink\" title=\"k8s-prometheus\"></a>k8s-prometheus</h1><p>部署kubernetes_sd_configs<br>配置文件只采集了</p>\n<blockquote>\n<p>1 prometheus*  prometheus-server<br><br>2 container*   kubelet 的10250端口  &#x2F;metrics&#x2F;cadvisor<br><br>3 node*    node_exporter<br><br>4 apiserver*  apiserver 6443 端口 &#x2F;metrics<br><br>5 kube*  kube-state-metrics组件 8080端口 &#x2F;metrics<br><br>6 coredns*  kubernetes-pods 自动发现 pod需要配置 prometheus.io&#x2F;scrape: “true” 不然抓取不到 默认flase<br><br>prometheus.io&#x2F;path: “&#x2F;metrics”   # 指标路径（默认 &#x2F;metrics 可不写）<br><br>7 kubelet*  apiserver代理端点 &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;&lt;node-name&gt;&#x2F;proxy&#x2F;metrics<br>其他有需要的可以自行配置</p>\n</blockquote>\n<p>导入镜像，执行yml文件即可</p>\n<h2 id=\"prometheus效果图\"><a href=\"#prometheus效果图\" class=\"headerlink\" title=\"prometheus效果图\"></a>prometheus效果图</h2><p><img src=\"/2025/04/18/prometheus/image-2.png\" alt=\"alt text\"></p>\n<h2 id=\"grafana效果图\"><a href=\"#grafana效果图\" class=\"headerlink\" title=\"grafana效果图\"></a>grafana效果图</h2><p><img src=\"/2025/04/18/prometheus/image-3.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-4.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-5.png\" alt=\"alt text\"></p>\n<h2 id=\"kubelet-组件\"><a href=\"#kubelet-组件\" class=\"headerlink\" title=\"kubelet 组件\"></a>kubelet 组件</h2><p> kubelet 三个指标 &#x2F;metrics&#x2F;probes（探针） &#x2F;metrics&#x2F;cadvisor（pod） &#x2F;metrics（node）</p>\n<p>对应apiserver的 &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;${node-name}&#x2F;proxy&#x2F;${url};一般为了减少apiserver的负载不建议使用这种方式 **</p>\n<p>直接访问会报401没有权限<br><img src=\"/2025/04/18/prometheus/image-6.png\" alt=\"alt text\"></p>\n<p>需要先获取token，上面文件执行完会有一个prometheus用户<br><img src=\"/2025/04/18/prometheus/image-7.png\" alt=\"alt text\"></p>\n<p>pod内token路径为 &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</p>\n<p>通过token再去访问发现就正常了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-8.png\" alt=\"alt text\"></p>\n<p>对应kubelet*开头<br><img src=\"/2025/04/18/prometheus/image-9.png\" alt=\"alt text\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics/probes（探针）</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/probes</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics/probes</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-10.png\" alt=\"alt text\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics/cadvisor（pod）</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/cadvisor</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics/cadvisor</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-11.png\" alt=\"alt text\"></p>\n<p>对应container*开头，容器指标<br><img src=\"/2025/04/18/prometheus/image-12.png\" alt=\"alt text\"></p>\n<h2 id=\"node-exporter\"><a href=\"#node-exporter\" class=\"headerlink\" title=\"node_exporter\"></a>node_exporter</h2><p>端口暴露到节点了就不需要token了<br><img src=\"/2025/04/18/prometheus/image-13.png\" alt=\"alt text\"></p>\n<p>node*开头，节点指标<br><img src=\"/2025/04/18/prometheus/image-14.png\" alt=\"alt text\"></p>\n<h2 id=\"kube-state-metrics\"><a href=\"#kube-state-metrics\" class=\"headerlink\" title=\"kube-state-metrics\"></a>kube-state-metrics</h2><p>集群应用状态监控比较重要的一个需要单独安装<br>使用containerPort: 8080 暴露到节点了不需要token<br><img src=\"/2025/04/18/prometheus/image-15.png\" alt=\"alt text\"></p>\n<p>kube*开头<br><img src=\"/2025/04/18/prometheus/image-16.png\" alt=\"alt text\"></p>\n<h2 id=\"apiserver\"><a href=\"#apiserver\" class=\"headerlink\" title=\"apiserver\"></a>apiserver</h2><p>主要是监控apiserver的qps,查询成功率失败率等信息<br><img src=\"/2025/04/18/prometheus/image-17.png\" alt=\"alt text\"></p>\n<p>apiserver*开头<br><img src=\"/2025/04/18/prometheus/image-18.png\" alt=\"alt text\"></p>\n<h2 id=\"kubernetes-pods-自动发现\"><a href=\"#kubernetes-pods-自动发现\" class=\"headerlink\" title=\"kubernetes-pods 自动发现\"></a>kubernetes-pods 自动发现</h2><p>如果元数据内设置true，该pod才可以被抓取，默认false<br><img src=\"/2025/04/18/prometheus/image-19.png\" alt=\"alt text\"></p>\n<p>以coredns为例<br><img src=\"/2025/04/18/prometheus/image-20.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-21.png\" alt=\"alt text\"></p>\n<p>以coredns*开头<br><img src=\"/2025/04/18/prometheus/image-22.png\" alt=\"alt text\"></p>\n<p>这个自动发现还可以配置自身业务的监控，只有保证开启抓取，和符合prometheus抓取规范就可以，如果开启了prometheus.io&#x2F;scrape 但是pod并没有提供数据指标的能力就会直接报错，如图404<br><img src=\"/2025/04/18/prometheus/image-23.png\" alt=\"alt text\"></p>\n<p>比如现在我想加一个grafana的数据，只需要添加对应元数据就可以了<br><img src=\"/2025/04/18/prometheus/image-24.png\" alt=\"alt text\"></p>\n<p>prometheus就自动发现了pod的ip<br><img src=\"/2025/04/18/prometheus/image-1.png\" alt=\"alt text\"></p>\n<p>grafana*开头<br><img src=\"/2025/04/18/prometheus/image.png\" alt=\"alt text\"></p>\n","excerpt":"","more":"<p><a href=\"https://github.com/likaiyuan00/k8s-prometheus.git\">https://github.com/likaiyuan00/k8s-prometheus.git</a></p>\n<h1 id=\"k8s-prometheus\"><a href=\"#k8s-prometheus\" class=\"headerlink\" title=\"k8s-prometheus\"></a>k8s-prometheus</h1><p>部署kubernetes_sd_configs<br>配置文件只采集了</p>\n<blockquote>\n<p>1 prometheus*  prometheus-server<br><br>2 container*   kubelet 的10250端口  &#x2F;metrics&#x2F;cadvisor<br><br>3 node*    node_exporter<br><br>4 apiserver*  apiserver 6443 端口 &#x2F;metrics<br><br>5 kube*  kube-state-metrics组件 8080端口 &#x2F;metrics<br><br>6 coredns*  kubernetes-pods 自动发现 pod需要配置 prometheus.io&#x2F;scrape: “true” 不然抓取不到 默认flase<br><br>prometheus.io&#x2F;path: “&#x2F;metrics”   # 指标路径（默认 &#x2F;metrics 可不写）<br><br>7 kubelet*  apiserver代理端点 &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;&lt;node-name&gt;&#x2F;proxy&#x2F;metrics<br>其他有需要的可以自行配置</p>\n</blockquote>\n<p>导入镜像，执行yml文件即可</p>\n<h2 id=\"prometheus效果图\"><a href=\"#prometheus效果图\" class=\"headerlink\" title=\"prometheus效果图\"></a>prometheus效果图</h2><p><img src=\"/2025/04/18/prometheus/image-2.png\" alt=\"alt text\"></p>\n<h2 id=\"grafana效果图\"><a href=\"#grafana效果图\" class=\"headerlink\" title=\"grafana效果图\"></a>grafana效果图</h2><p><img src=\"/2025/04/18/prometheus/image-3.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-4.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-5.png\" alt=\"alt text\"></p>\n<h2 id=\"kubelet-组件\"><a href=\"#kubelet-组件\" class=\"headerlink\" title=\"kubelet 组件\"></a>kubelet 组件</h2><p> kubelet 三个指标 &#x2F;metrics&#x2F;probes（探针） &#x2F;metrics&#x2F;cadvisor（pod） &#x2F;metrics（node）</p>\n<p>对应apiserver的 &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;${node-name}&#x2F;proxy&#x2F;${url};一般为了减少apiserver的负载不建议使用这种方式 **</p>\n<p>直接访问会报401没有权限<br><img src=\"/2025/04/18/prometheus/image-6.png\" alt=\"alt text\"></p>\n<p>需要先获取token，上面文件执行完会有一个prometheus用户<br><img src=\"/2025/04/18/prometheus/image-7.png\" alt=\"alt text\"></p>\n<p>pod内token路径为 &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</p>\n<p>通过token再去访问发现就正常了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-8.png\" alt=\"alt text\"></p>\n<p>对应kubelet*开头<br><img src=\"/2025/04/18/prometheus/image-9.png\" alt=\"alt text\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics/probes（探针）</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/probes</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics/probes</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-10.png\" alt=\"alt text\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/metrics/cadvisor（pod）</span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:6443/api/v1/nodes/master/proxy/metrics/cadvisor</span><br><span class=\"line\"></span><br><span class=\"line\">curl -k -sS  -H &quot;Authorization: Bearer $TOKEN&quot;  https://127.0.0.1:10250/metrics/cadvisor</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2025/04/18/prometheus/image-11.png\" alt=\"alt text\"></p>\n<p>对应container*开头，容器指标<br><img src=\"/2025/04/18/prometheus/image-12.png\" alt=\"alt text\"></p>\n<h2 id=\"node-exporter\"><a href=\"#node-exporter\" class=\"headerlink\" title=\"node_exporter\"></a>node_exporter</h2><p>端口暴露到节点了就不需要token了<br><img src=\"/2025/04/18/prometheus/image-13.png\" alt=\"alt text\"></p>\n<p>node*开头，节点指标<br><img src=\"/2025/04/18/prometheus/image-14.png\" alt=\"alt text\"></p>\n<h2 id=\"kube-state-metrics\"><a href=\"#kube-state-metrics\" class=\"headerlink\" title=\"kube-state-metrics\"></a>kube-state-metrics</h2><p>集群应用状态监控比较重要的一个需要单独安装<br>使用containerPort: 8080 暴露到节点了不需要token<br><img src=\"/2025/04/18/prometheus/image-15.png\" alt=\"alt text\"></p>\n<p>kube*开头<br><img src=\"/2025/04/18/prometheus/image-16.png\" alt=\"alt text\"></p>\n<h2 id=\"apiserver\"><a href=\"#apiserver\" class=\"headerlink\" title=\"apiserver\"></a>apiserver</h2><p>主要是监控apiserver的qps,查询成功率失败率等信息<br><img src=\"/2025/04/18/prometheus/image-17.png\" alt=\"alt text\"></p>\n<p>apiserver*开头<br><img src=\"/2025/04/18/prometheus/image-18.png\" alt=\"alt text\"></p>\n<h2 id=\"kubernetes-pods-自动发现\"><a href=\"#kubernetes-pods-自动发现\" class=\"headerlink\" title=\"kubernetes-pods 自动发现\"></a>kubernetes-pods 自动发现</h2><p>如果元数据内设置true，该pod才可以被抓取，默认false<br><img src=\"/2025/04/18/prometheus/image-19.png\" alt=\"alt text\"></p>\n<p>以coredns为例<br><img src=\"/2025/04/18/prometheus/image-20.png\" alt=\"alt text\"><br><img src=\"/2025/04/18/prometheus/image-21.png\" alt=\"alt text\"></p>\n<p>以coredns*开头<br><img src=\"/2025/04/18/prometheus/image-22.png\" alt=\"alt text\"></p>\n<p>这个自动发现还可以配置自身业务的监控，只有保证开启抓取，和符合prometheus抓取规范就可以，如果开启了prometheus.io&#x2F;scrape 但是pod并没有提供数据指标的能力就会直接报错，如图404<br><img src=\"/2025/04/18/prometheus/image-23.png\" alt=\"alt text\"></p>\n<p>比如现在我想加一个grafana的数据，只需要添加对应元数据就可以了<br><img src=\"/2025/04/18/prometheus/image-24.png\" alt=\"alt text\"></p>\n<p>prometheus就自动发现了pod的ip<br><img src=\"/2025/04/18/prometheus/image-1.png\" alt=\"alt text\"></p>\n<p>grafana*开头<br><img src=\"/2025/04/18/prometheus/image.png\" alt=\"alt text\"></p>\n"},{"title":"screen","date":"2025-04-27T03:20:26.000Z","_content":"# 多终端管理神器\n![alt text](image.png)\nctrl +a + d 退出终端\nexit 退出加销毁终端\n## 常用参数\n```config\n$> screen [-AmRvx -ls -wipe][-d <作业名称>][-h <行数>][-r <作业名称>][-s ][-S <作业名称>]\n \n-A 　将所有的视窗都调整为目前终端机的大小。\n-d   <作业名称> 　将指定的screen作业离线。\n-h   <行数> 　指定视窗的缓冲区行数。\n-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。\n-r   <作业名称> 　恢复离线的screen作业。\n-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。\n-s 　指定建立新视窗时，所要执行的shell。\n-S   <作业名称> 　指定screen作业的名称。\n-v 　显示版本信息。\n-x 　恢复之前离线的screen作业。\n-ls或--list 　显示目前所有的screen作业。\n-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。\nscreen -S yourname -> 新建一个叫yourname的session\nscreen -ls         -> 列出当前所有的session\nscreen -r yourname -> 回到yourname这个session\nscreen -d yourname -> 远程detach某个session\nscreen -d -r yourname -> 结束当前session并回到yourname这个session\n```\n## 常用快捷键\n```\nC-a ? -> 显示所有键绑定信息\nC-a c -> 创建一个新的运行shell的窗口并切换到该窗口\nC-a n -> Next，切换到下一个 window \nC-a p -> Previous，切换到前一个 window \nC-a 0..9 -> 切换到第 0..9 个 window\nCtrl+a [Space] -> 由视窗0循序切换到视窗9\nC-a C-a -> 在两个最近使用的 window 间切换 \nC-a x -> 锁住当前的 window，需用用户密码解锁\nC-a d -> detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 \nC-a z -> 把当前session放到后台执行，用 shell 的 fg 命令则可回去。\nC-a w -> 显示所有窗口列表\nC-a t -> time，显示当前时间，和系统的 load \nC-a k -> kill window，强行关闭当前的 window\nC-a [ -> 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样\n    C-b Backward，PageUp \n    C-f Forward，PageDown \n    H(大写) High，将光标移至左上角 \n    L Low，将光标移至左下角 \n    0 移到行首 \n    $ 行末 \n    w forward one word，以字为单位往前移 \n    b backward one word，以字为单位往后移 \n    Space 第一次按为标记区起点，第二次按为终点 \n    Esc 结束 copy mode \nC-a ] -> paste，把刚刚在 copy mode 选定的内容贴上\n```\n","source":"_posts/screen.md","raw":"---\ntitle: screen\ndate: 2025-04-27 11:20:26\ntags: \ncategories: linux\n---\n# 多终端管理神器\n![alt text](image.png)\nctrl +a + d 退出终端\nexit 退出加销毁终端\n## 常用参数\n```config\n$> screen [-AmRvx -ls -wipe][-d <作业名称>][-h <行数>][-r <作业名称>][-s ][-S <作业名称>]\n \n-A 　将所有的视窗都调整为目前终端机的大小。\n-d   <作业名称> 　将指定的screen作业离线。\n-h   <行数> 　指定视窗的缓冲区行数。\n-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。\n-r   <作业名称> 　恢复离线的screen作业。\n-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。\n-s 　指定建立新视窗时，所要执行的shell。\n-S   <作业名称> 　指定screen作业的名称。\n-v 　显示版本信息。\n-x 　恢复之前离线的screen作业。\n-ls或--list 　显示目前所有的screen作业。\n-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。\nscreen -S yourname -> 新建一个叫yourname的session\nscreen -ls         -> 列出当前所有的session\nscreen -r yourname -> 回到yourname这个session\nscreen -d yourname -> 远程detach某个session\nscreen -d -r yourname -> 结束当前session并回到yourname这个session\n```\n## 常用快捷键\n```\nC-a ? -> 显示所有键绑定信息\nC-a c -> 创建一个新的运行shell的窗口并切换到该窗口\nC-a n -> Next，切换到下一个 window \nC-a p -> Previous，切换到前一个 window \nC-a 0..9 -> 切换到第 0..9 个 window\nCtrl+a [Space] -> 由视窗0循序切换到视窗9\nC-a C-a -> 在两个最近使用的 window 间切换 \nC-a x -> 锁住当前的 window，需用用户密码解锁\nC-a d -> detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 \nC-a z -> 把当前session放到后台执行，用 shell 的 fg 命令则可回去。\nC-a w -> 显示所有窗口列表\nC-a t -> time，显示当前时间，和系统的 load \nC-a k -> kill window，强行关闭当前的 window\nC-a [ -> 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样\n    C-b Backward，PageUp \n    C-f Forward，PageDown \n    H(大写) High，将光标移至左上角 \n    L Low，将光标移至左下角 \n    0 移到行首 \n    $ 行末 \n    w forward one word，以字为单位往前移 \n    b backward one word，以字为单位往后移 \n    Space 第一次按为标记区起点，第二次按为终点 \n    Esc 结束 copy mode \nC-a ] -> paste，把刚刚在 copy mode 选定的内容贴上\n```\n","slug":"screen","published":1,"updated":"2025-04-27T03:21:32.606Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwj000eqmm48ce4084s","content":"<h1 id=\"多终端管理神器\"><a href=\"#多终端管理神器\" class=\"headerlink\" title=\"多终端管理神器\"></a>多终端管理神器</h1><p><img src=\"/2025/04/27/screen/image.png\" alt=\"alt text\"><br>ctrl +a + d 退出终端<br>exit 退出加销毁终端</p>\n<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]</span><br><span class=\"line\"> </span><br><span class=\"line\">-A 　将所有的视窗都调整为目前终端机的大小。</span><br><span class=\"line\">-d   &lt;作业名称&gt; 　将指定的screen作业离线。</span><br><span class=\"line\">-h   &lt;行数&gt; 　指定视窗的缓冲区行数。</span><br><span class=\"line\">-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。</span><br><span class=\"line\">-r   &lt;作业名称&gt; 　恢复离线的screen作业。</span><br><span class=\"line\">-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。</span><br><span class=\"line\">-s 　指定建立新视窗时，所要执行的shell。</span><br><span class=\"line\">-S   &lt;作业名称&gt; 　指定screen作业的名称。</span><br><span class=\"line\">-v 　显示版本信息。</span><br><span class=\"line\">-x 　恢复之前离线的screen作业。</span><br><span class=\"line\">-ls或--list 　显示目前所有的screen作业。</span><br><span class=\"line\">-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。</span><br><span class=\"line\">screen -S yourname -&gt; 新建一个叫yourname的session</span><br><span class=\"line\">screen -ls         -&gt; 列出当前所有的session</span><br><span class=\"line\">screen -r yourname -&gt; 回到yourname这个session</span><br><span class=\"line\">screen -d yourname -&gt; 远程detach某个session</span><br><span class=\"line\">screen -d -r yourname -&gt; 结束当前session并回到yourname这个session</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C-a ? -&gt; 显示所有键绑定信息</span><br><span class=\"line\">C-a c -&gt; 创建一个新的运行shell的窗口并切换到该窗口</span><br><span class=\"line\">C-a n -&gt; Next，切换到下一个 window </span><br><span class=\"line\">C-a p -&gt; Previous，切换到前一个 window </span><br><span class=\"line\">C-a 0..9 -&gt; 切换到第 0..9 个 window</span><br><span class=\"line\">Ctrl+a [Space] -&gt; 由视窗0循序切换到视窗9</span><br><span class=\"line\">C-a C-a -&gt; 在两个最近使用的 window 间切换 </span><br><span class=\"line\">C-a x -&gt; 锁住当前的 window，需用用户密码解锁</span><br><span class=\"line\">C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 </span><br><span class=\"line\">C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。</span><br><span class=\"line\">C-a w -&gt; 显示所有窗口列表</span><br><span class=\"line\">C-a t -&gt; time，显示当前时间，和系统的 load </span><br><span class=\"line\">C-a k -&gt; kill window，强行关闭当前的 window</span><br><span class=\"line\">C-a [ -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样</span><br><span class=\"line\">    C-b Backward，PageUp </span><br><span class=\"line\">    C-f Forward，PageDown </span><br><span class=\"line\">    H(大写) High，将光标移至左上角 </span><br><span class=\"line\">    L Low，将光标移至左下角 </span><br><span class=\"line\">    0 移到行首 </span><br><span class=\"line\">    $ 行末 </span><br><span class=\"line\">    w forward one word，以字为单位往前移 </span><br><span class=\"line\">    b backward one word，以字为单位往后移 </span><br><span class=\"line\">    Space 第一次按为标记区起点，第二次按为终点 </span><br><span class=\"line\">    Esc 结束 copy mode </span><br><span class=\"line\">C-a ] -&gt; paste，把刚刚在 copy mode 选定的内容贴上</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"多终端管理神器\"><a href=\"#多终端管理神器\" class=\"headerlink\" title=\"多终端管理神器\"></a>多终端管理神器</h1><p><img src=\"/2025/04/27/screen/image.png\" alt=\"alt text\"><br>ctrl +a + d 退出终端<br>exit 退出加销毁终端</p>\n<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]</span><br><span class=\"line\"> </span><br><span class=\"line\">-A 　将所有的视窗都调整为目前终端机的大小。</span><br><span class=\"line\">-d   &lt;作业名称&gt; 　将指定的screen作业离线。</span><br><span class=\"line\">-h   &lt;行数&gt; 　指定视窗的缓冲区行数。</span><br><span class=\"line\">-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。</span><br><span class=\"line\">-r   &lt;作业名称&gt; 　恢复离线的screen作业。</span><br><span class=\"line\">-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。</span><br><span class=\"line\">-s 　指定建立新视窗时，所要执行的shell。</span><br><span class=\"line\">-S   &lt;作业名称&gt; 　指定screen作业的名称。</span><br><span class=\"line\">-v 　显示版本信息。</span><br><span class=\"line\">-x 　恢复之前离线的screen作业。</span><br><span class=\"line\">-ls或--list 　显示目前所有的screen作业。</span><br><span class=\"line\">-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。</span><br><span class=\"line\">screen -S yourname -&gt; 新建一个叫yourname的session</span><br><span class=\"line\">screen -ls         -&gt; 列出当前所有的session</span><br><span class=\"line\">screen -r yourname -&gt; 回到yourname这个session</span><br><span class=\"line\">screen -d yourname -&gt; 远程detach某个session</span><br><span class=\"line\">screen -d -r yourname -&gt; 结束当前session并回到yourname这个session</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C-a ? -&gt; 显示所有键绑定信息</span><br><span class=\"line\">C-a c -&gt; 创建一个新的运行shell的窗口并切换到该窗口</span><br><span class=\"line\">C-a n -&gt; Next，切换到下一个 window </span><br><span class=\"line\">C-a p -&gt; Previous，切换到前一个 window </span><br><span class=\"line\">C-a 0..9 -&gt; 切换到第 0..9 个 window</span><br><span class=\"line\">Ctrl+a [Space] -&gt; 由视窗0循序切换到视窗9</span><br><span class=\"line\">C-a C-a -&gt; 在两个最近使用的 window 间切换 </span><br><span class=\"line\">C-a x -&gt; 锁住当前的 window，需用用户密码解锁</span><br><span class=\"line\">C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 </span><br><span class=\"line\">C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。</span><br><span class=\"line\">C-a w -&gt; 显示所有窗口列表</span><br><span class=\"line\">C-a t -&gt; time，显示当前时间，和系统的 load </span><br><span class=\"line\">C-a k -&gt; kill window，强行关闭当前的 window</span><br><span class=\"line\">C-a [ -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样</span><br><span class=\"line\">    C-b Backward，PageUp </span><br><span class=\"line\">    C-f Forward，PageDown </span><br><span class=\"line\">    H(大写) High，将光标移至左上角 </span><br><span class=\"line\">    L Low，将光标移至左下角 </span><br><span class=\"line\">    0 移到行首 </span><br><span class=\"line\">    $ 行末 </span><br><span class=\"line\">    w forward one word，以字为单位往前移 </span><br><span class=\"line\">    b backward one word，以字为单位往后移 </span><br><span class=\"line\">    Space 第一次按为标记区起点，第二次按为终点 </span><br><span class=\"line\">    Esc 结束 copy mode </span><br><span class=\"line\">C-a ] -&gt; paste，把刚刚在 copy mode 选定的内容贴上</span><br></pre></td></tr></table></figure>\n"},{"title":"使用kubekey快速安装k8s","date":"2025-04-27T03:16:46.000Z","_content":"官方地址\nhttps://github.com/kubesphere/kubekey\n\n# 安装\n> curl -sfL https://get-kk.kubesphere.io | sh -\n## 单节点测试使用\n```shell\nkk create cluster\n#默认 v1.23.17\n--with-kubernetes v1.24.1 \n#默认docker\n--container-manager containerd\n#如果不使用--with-kubesphere默认不安装；默认版本为 v3.4.1\n--with-kubesphere\n```\n## 多节点\n```shell\nkk create config -f deploy.yml\n#-f 指定配置文件开始安装\nkk create cluster -f deploy.yml\n#deploy.yml;其他节点的ip用户名密码的修改成实际的\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: sample\nspec:\n  hosts:\n  - {name: node1, address: 172.16.0.2, internalAddress: 172.16.0.2, user: ubuntu, password: \"Qcloud@123\"}\n  - {name: node2, address: 172.16.0.3, internalAddress: 172.16.0.3, user: ubuntu, password: \"Qcloud@123\"}\n  roleGroups:\n    etcd:\n    - node1\n    control-plane: \n    - node1\n    worker:\n    - node1\n    - node2\n  controlPlaneEndpoint:\n    ## Internal loadbalancer for apiservers \n    # internalLoadbalancer: haproxy\n\n    domain: lb.kubesphere.local\n    address: \"\"\n    port: 6443\n  kubernetes:\n    version: v1.23.17\n    clusterName: cluster.local\n    autoRenewCerts: true\n    containerManager: docker\n  etcd:\n    type: kubekey\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni\n    multusCNI:\n      enabled: false\n  registry:\n    privateRegistry: \"\"\n    namespaceOverride: \"\"\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n----------------------------------------------------\n#默认不安装kubesphere需要指定--with-kubesphere\nkk create config --with-kubesphere -f deploy-with.yml\n```\n# 新增删除\n```shell\n#新增节点接入集群\nkk add nodes -f  deploy.yml\n#删除节点\nkk delete node <nodeName> -f deploy.yml\n#删除集群\nkk delete cluster [-f deploy.yml]\n```\n\n# 升级集群\n```shell\n使用指定版本升级集群。\n\nkk upgrade [--with-kubernetes version] [--with-kubesphere version] \n仅支持升级 Kubernetes。\n仅支持升级 KubeSphere。\n支持升级 Kubernetes 和 KubeSphere。\n多节点\n使用指定的配置文件升级集群。\n\nkk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]\n如果指定了--with-kubernetes或--with-kubesphere，配置文件也将被更新。\n用于-f指定为集群创建而生成的配置文件。\n```\n\n# 更新集群证书\n>#默认一年<br>\nkk  certs renew\n![alt text](image.png)\n","source":"_posts/使用kubekey快速安装k8s.md","raw":"---\ntitle: 使用kubekey快速安装k8s\ndate: 2025-04-27 11:16:46\ntags:\ncategories: k8s\n---\n官方地址\nhttps://github.com/kubesphere/kubekey\n\n# 安装\n> curl -sfL https://get-kk.kubesphere.io | sh -\n## 单节点测试使用\n```shell\nkk create cluster\n#默认 v1.23.17\n--with-kubernetes v1.24.1 \n#默认docker\n--container-manager containerd\n#如果不使用--with-kubesphere默认不安装；默认版本为 v3.4.1\n--with-kubesphere\n```\n## 多节点\n```shell\nkk create config -f deploy.yml\n#-f 指定配置文件开始安装\nkk create cluster -f deploy.yml\n#deploy.yml;其他节点的ip用户名密码的修改成实际的\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: sample\nspec:\n  hosts:\n  - {name: node1, address: 172.16.0.2, internalAddress: 172.16.0.2, user: ubuntu, password: \"Qcloud@123\"}\n  - {name: node2, address: 172.16.0.3, internalAddress: 172.16.0.3, user: ubuntu, password: \"Qcloud@123\"}\n  roleGroups:\n    etcd:\n    - node1\n    control-plane: \n    - node1\n    worker:\n    - node1\n    - node2\n  controlPlaneEndpoint:\n    ## Internal loadbalancer for apiservers \n    # internalLoadbalancer: haproxy\n\n    domain: lb.kubesphere.local\n    address: \"\"\n    port: 6443\n  kubernetes:\n    version: v1.23.17\n    clusterName: cluster.local\n    autoRenewCerts: true\n    containerManager: docker\n  etcd:\n    type: kubekey\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni\n    multusCNI:\n      enabled: false\n  registry:\n    privateRegistry: \"\"\n    namespaceOverride: \"\"\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n----------------------------------------------------\n#默认不安装kubesphere需要指定--with-kubesphere\nkk create config --with-kubesphere -f deploy-with.yml\n```\n# 新增删除\n```shell\n#新增节点接入集群\nkk add nodes -f  deploy.yml\n#删除节点\nkk delete node <nodeName> -f deploy.yml\n#删除集群\nkk delete cluster [-f deploy.yml]\n```\n\n# 升级集群\n```shell\n使用指定版本升级集群。\n\nkk upgrade [--with-kubernetes version] [--with-kubesphere version] \n仅支持升级 Kubernetes。\n仅支持升级 KubeSphere。\n支持升级 Kubernetes 和 KubeSphere。\n多节点\n使用指定的配置文件升级集群。\n\nkk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]\n如果指定了--with-kubernetes或--with-kubesphere，配置文件也将被更新。\n用于-f指定为集群创建而生成的配置文件。\n```\n\n# 更新集群证书\n>#默认一年<br>\nkk  certs renew\n![alt text](image.png)\n","slug":"使用kubekey快速安装k8s","published":1,"updated":"2025-04-27T03:17:36.486Z","comments":1,"layout":"post","photos":[],"_id":"cm9z35qwk000iqmm4cx3x7xn7","content":"<p>官方地址<br><a href=\"https://github.com/kubesphere/kubekey\">https://github.com/kubesphere/kubekey</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><blockquote>\n<p>curl -sfL <a href=\"https://get-kk.kubesphere.io/\">https://get-kk.kubesphere.io</a> | sh -</p>\n</blockquote>\n<h2 id=\"单节点测试使用\"><a href=\"#单节点测试使用\" class=\"headerlink\" title=\"单节点测试使用\"></a>单节点测试使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kk create cluster</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认 v1.23.17</span></span><br><span class=\"line\">--with-kubernetes v1.24.1 </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认docker</span></span><br><span class=\"line\">--container-manager containerd</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">如果不使用--with-kubesphere默认不安装；默认版本为 v3.4.1</span></span><br><span class=\"line\">--with-kubesphere</span><br></pre></td></tr></table></figure>\n<h2 id=\"多节点\"><a href=\"#多节点\" class=\"headerlink\" title=\"多节点\"></a>多节点</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kk create config -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">-f 指定配置文件开始安装</span></span><br><span class=\"line\">kk create cluster -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">deploy.yml;其他节点的ip用户名密码的修改成实际的</span></span><br><span class=\"line\">apiVersion: kubekey.kubesphere.io/v1alpha2</span><br><span class=\"line\">kind: Cluster</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: sample</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  hosts:</span><br><span class=\"line\">  - &#123;name: node1, address: 172.16.0.2, internalAddress: 172.16.0.2, user: ubuntu, password: &quot;Qcloud@123&quot;&#125;</span><br><span class=\"line\">  - &#123;name: node2, address: 172.16.0.3, internalAddress: 172.16.0.3, user: ubuntu, password: &quot;Qcloud@123&quot;&#125;</span><br><span class=\"line\">  roleGroups:</span><br><span class=\"line\">    etcd:</span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    control-plane: </span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    worker:</span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    - node2</span><br><span class=\"line\">  controlPlaneEndpoint:</span><br><span class=\"line\">    ## Internal loadbalancer for apiservers </span><br><span class=\"line\">    # internalLoadbalancer: haproxy</span><br><span class=\"line\"></span><br><span class=\"line\">    domain: lb.kubesphere.local</span><br><span class=\"line\">    address: &quot;&quot;</span><br><span class=\"line\">    port: 6443</span><br><span class=\"line\">  kubernetes:</span><br><span class=\"line\">    version: v1.23.17</span><br><span class=\"line\">    clusterName: cluster.local</span><br><span class=\"line\">    autoRenewCerts: true</span><br><span class=\"line\">    containerManager: docker</span><br><span class=\"line\">  etcd:</span><br><span class=\"line\">    type: kubekey</span><br><span class=\"line\">  network:</span><br><span class=\"line\">    plugin: calico</span><br><span class=\"line\">    kubePodsCIDR: 10.233.64.0/18</span><br><span class=\"line\">    kubeServiceCIDR: 10.233.0.0/18</span><br><span class=\"line\">    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span><br><span class=\"line\">    multusCNI:</span><br><span class=\"line\">      enabled: false</span><br><span class=\"line\">  registry:</span><br><span class=\"line\">    privateRegistry: &quot;&quot;</span><br><span class=\"line\">    namespaceOverride: &quot;&quot;</span><br><span class=\"line\">    registryMirrors: []</span><br><span class=\"line\">    insecureRegistries: []</span><br><span class=\"line\">  addons: []</span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认不安装kubesphere需要指定--with-kubesphere</span></span><br><span class=\"line\">kk create config --with-kubesphere -f deploy-with.yml</span><br></pre></td></tr></table></figure>\n<h1 id=\"新增删除\"><a href=\"#新增删除\" class=\"headerlink\" title=\"新增删除\"></a>新增删除</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">新增节点接入集群</span></span><br><span class=\"line\">kk add nodes -f  deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">删除节点</span></span><br><span class=\"line\">kk delete node &lt;nodeName&gt; -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">删除集群</span></span><br><span class=\"line\">kk delete cluster [-f deploy.yml]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"升级集群\"><a href=\"#升级集群\" class=\"headerlink\" title=\"升级集群\"></a>升级集群</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用指定版本升级集群。</span><br><span class=\"line\"></span><br><span class=\"line\">kk upgrade [--with-kubernetes version] [--with-kubesphere version] </span><br><span class=\"line\">仅支持升级 Kubernetes。</span><br><span class=\"line\">仅支持升级 KubeSphere。</span><br><span class=\"line\">支持升级 Kubernetes 和 KubeSphere。</span><br><span class=\"line\">多节点</span><br><span class=\"line\">使用指定的配置文件升级集群。</span><br><span class=\"line\"></span><br><span class=\"line\">kk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]</span><br><span class=\"line\">如果指定了--with-kubernetes或--with-kubesphere，配置文件也将被更新。</span><br><span class=\"line\">用于-f指定为集群创建而生成的配置文件。</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"更新集群证书\"><a href=\"#更新集群证书\" class=\"headerlink\" title=\"更新集群证书\"></a>更新集群证书</h1><blockquote>\n<p>#默认一年<br><br>kk  certs renew<br><img src=\"/2025/04/27/%E4%BD%BF%E7%94%A8kubekey%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85k8s/image.png\" alt=\"alt text\"></p>\n</blockquote>\n","excerpt":"","more":"<p>官方地址<br><a href=\"https://github.com/kubesphere/kubekey\">https://github.com/kubesphere/kubekey</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><blockquote>\n<p>curl -sfL <a href=\"https://get-kk.kubesphere.io/\">https://get-kk.kubesphere.io</a> | sh -</p>\n</blockquote>\n<h2 id=\"单节点测试使用\"><a href=\"#单节点测试使用\" class=\"headerlink\" title=\"单节点测试使用\"></a>单节点测试使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kk create cluster</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认 v1.23.17</span></span><br><span class=\"line\">--with-kubernetes v1.24.1 </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认docker</span></span><br><span class=\"line\">--container-manager containerd</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">如果不使用--with-kubesphere默认不安装；默认版本为 v3.4.1</span></span><br><span class=\"line\">--with-kubesphere</span><br></pre></td></tr></table></figure>\n<h2 id=\"多节点\"><a href=\"#多节点\" class=\"headerlink\" title=\"多节点\"></a>多节点</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kk create config -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">-f 指定配置文件开始安装</span></span><br><span class=\"line\">kk create cluster -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">deploy.yml;其他节点的ip用户名密码的修改成实际的</span></span><br><span class=\"line\">apiVersion: kubekey.kubesphere.io/v1alpha2</span><br><span class=\"line\">kind: Cluster</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: sample</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  hosts:</span><br><span class=\"line\">  - &#123;name: node1, address: 172.16.0.2, internalAddress: 172.16.0.2, user: ubuntu, password: &quot;Qcloud@123&quot;&#125;</span><br><span class=\"line\">  - &#123;name: node2, address: 172.16.0.3, internalAddress: 172.16.0.3, user: ubuntu, password: &quot;Qcloud@123&quot;&#125;</span><br><span class=\"line\">  roleGroups:</span><br><span class=\"line\">    etcd:</span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    control-plane: </span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    worker:</span><br><span class=\"line\">    - node1</span><br><span class=\"line\">    - node2</span><br><span class=\"line\">  controlPlaneEndpoint:</span><br><span class=\"line\">    ## Internal loadbalancer for apiservers </span><br><span class=\"line\">    # internalLoadbalancer: haproxy</span><br><span class=\"line\"></span><br><span class=\"line\">    domain: lb.kubesphere.local</span><br><span class=\"line\">    address: &quot;&quot;</span><br><span class=\"line\">    port: 6443</span><br><span class=\"line\">  kubernetes:</span><br><span class=\"line\">    version: v1.23.17</span><br><span class=\"line\">    clusterName: cluster.local</span><br><span class=\"line\">    autoRenewCerts: true</span><br><span class=\"line\">    containerManager: docker</span><br><span class=\"line\">  etcd:</span><br><span class=\"line\">    type: kubekey</span><br><span class=\"line\">  network:</span><br><span class=\"line\">    plugin: calico</span><br><span class=\"line\">    kubePodsCIDR: 10.233.64.0/18</span><br><span class=\"line\">    kubeServiceCIDR: 10.233.0.0/18</span><br><span class=\"line\">    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span><br><span class=\"line\">    multusCNI:</span><br><span class=\"line\">      enabled: false</span><br><span class=\"line\">  registry:</span><br><span class=\"line\">    privateRegistry: &quot;&quot;</span><br><span class=\"line\">    namespaceOverride: &quot;&quot;</span><br><span class=\"line\">    registryMirrors: []</span><br><span class=\"line\">    insecureRegistries: []</span><br><span class=\"line\">  addons: []</span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认不安装kubesphere需要指定--with-kubesphere</span></span><br><span class=\"line\">kk create config --with-kubesphere -f deploy-with.yml</span><br></pre></td></tr></table></figure>\n<h1 id=\"新增删除\"><a href=\"#新增删除\" class=\"headerlink\" title=\"新增删除\"></a>新增删除</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">新增节点接入集群</span></span><br><span class=\"line\">kk add nodes -f  deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">删除节点</span></span><br><span class=\"line\">kk delete node &lt;nodeName&gt; -f deploy.yml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">删除集群</span></span><br><span class=\"line\">kk delete cluster [-f deploy.yml]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"升级集群\"><a href=\"#升级集群\" class=\"headerlink\" title=\"升级集群\"></a>升级集群</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用指定版本升级集群。</span><br><span class=\"line\"></span><br><span class=\"line\">kk upgrade [--with-kubernetes version] [--with-kubesphere version] </span><br><span class=\"line\">仅支持升级 Kubernetes。</span><br><span class=\"line\">仅支持升级 KubeSphere。</span><br><span class=\"line\">支持升级 Kubernetes 和 KubeSphere。</span><br><span class=\"line\">多节点</span><br><span class=\"line\">使用指定的配置文件升级集群。</span><br><span class=\"line\"></span><br><span class=\"line\">kk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]</span><br><span class=\"line\">如果指定了--with-kubernetes或--with-kubesphere，配置文件也将被更新。</span><br><span class=\"line\">用于-f指定为集群创建而生成的配置文件。</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"更新集群证书\"><a href=\"#更新集群证书\" class=\"headerlink\" title=\"更新集群证书\"></a>更新集群证书</h1><blockquote>\n<p>#默认一年<br><br>kk  certs renew<br><img src=\"/2025/04/27/%E4%BD%BF%E7%94%A8kubekey%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85k8s/image.png\" alt=\"alt text\"></p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/iptables防止ddos-cc/image-1.png","slug":"image-1.png","post":"cm9z35qwc0007qmm40nz11163","modified":0,"renderable":0},{"_id":"source/_posts/iptables防止ddos-cc/image-2.png","slug":"image-2.png","post":"cm9z35qwc0007qmm40nz11163","modified":0,"renderable":0},{"_id":"source/_posts/iptables防止ddos-cc/image.png","slug":"image.png","post":"cm9z35qwc0007qmm40nz11163","modified":0,"renderable":0},{"_id":"source/_posts/openvpn/image-1.png","slug":"image-1.png","post":"cm9z35qwg000aqmm4h0ev2mkm","modified":0,"renderable":0},{"_id":"source/_posts/openvpn/image-2.png","slug":"image-2.png","post":"cm9z35qwg000aqmm4h0ev2mkm","modified":0,"renderable":0},{"_id":"source/_posts/openvpn/image-3.png","slug":"image-3.png","post":"cm9z35qwg000aqmm4h0ev2mkm","modified":0,"renderable":0},{"_id":"source/_posts/openvpn/image.png","slug":"image.png","post":"cm9z35qwg000aqmm4h0ev2mkm","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-1.png","slug":"image-1.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-10.png","slug":"image-10.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-11.png","slug":"image-11.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-12.png","slug":"image-12.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-13.png","slug":"image-13.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-14.png","slug":"image-14.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-15.png","slug":"image-15.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-16.png","slug":"image-16.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-17.png","slug":"image-17.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-18.png","slug":"image-18.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-19.png","slug":"image-19.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-2.png","slug":"image-2.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-20.png","slug":"image-20.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-21.png","slug":"image-21.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-22.png","slug":"image-22.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-23.png","slug":"image-23.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-24.png","slug":"image-24.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-3.png","slug":"image-3.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-4.png","slug":"image-4.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-5.png","slug":"image-5.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-6.png","slug":"image-6.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-7.png","slug":"image-7.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-8.png","slug":"image-8.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image-9.png","slug":"image-9.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/prometheus/image.png","slug":"image.png","post":"cm9z35qwh000dqmm4djdb2r1s","modified":0,"renderable":0},{"_id":"source/_posts/screen/image.png","slug":"image.png","post":"cm9z35qwj000eqmm48ce4084s","modified":0,"renderable":0},{"_id":"source/_posts/使用kubekey快速安装k8s/image.png","slug":"image.png","post":"cm9z35qwk000iqmm4cx3x7xn7","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cm9z35qw10001qmm40dk3hwpb","category_id":"cm9z35qw90004qmm4esrj0aru","_id":"cm9z35qwj000fqmm48tzzaiju"},{"post_id":"cm9z35qw60003qmm4a4ptfi9b","category_id":"cm9z35qwh000bqmm42y404lio","_id":"cm9z35qwm000jqmm40d93fkn5"},{"post_id":"cm9z35qwc0007qmm40nz11163","category_id":"cm9z35qwk000gqmm4b1vwgbxd","_id":"cm9z35qwn000mqmm48xwodx47"},{"post_id":"cm9z35qwe0009qmm44fsn60x6","category_id":"cm9z35qwm000kqmm4f4gf98ur","_id":"cm9z35qwp000pqmm42qyf1puw"},{"post_id":"cm9z35qwg000aqmm4h0ev2mkm","category_id":"cm9z35qwk000gqmm4b1vwgbxd","_id":"cm9z35qwp000qqmm47y56djth"},{"post_id":"cm9z35qwh000dqmm4djdb2r1s","category_id":"cm9z35qwp000oqmm46ihcevis","_id":"cm9z35qwq000tqmm4g2zz9psy"},{"post_id":"cm9z35qwj000eqmm48ce4084s","category_id":"cm9z35qwk000gqmm4b1vwgbxd","_id":"cm9z35qwr000uqmm48j6b9bns"},{"post_id":"cm9z35qwk000iqmm4cx3x7xn7","category_id":"cm9z35qwq000sqmm41do66x2h","_id":"cm9z35qwr000vqmm40muw2z7e"}],"PostTag":[{"post_id":"cm9z35qw10001qmm40dk3hwpb","tag_id":"cm9z35qwb0005qmm4aqwmbjux","_id":"cm9z35qwh000cqmm40h1g6t8e"},{"post_id":"cm9z35qwh000dqmm4djdb2r1s","tag_id":"cm9z35qwk000hqmm4cmn65uze","_id":"cm9z35qwn000lqmm454772wsc"}],"Tag":[{"name":"about","_id":"cm9z35qwb0005qmm4aqwmbjux"},{"name":"prometheus","_id":"cm9z35qwk000hqmm4cmn65uze"}]}}